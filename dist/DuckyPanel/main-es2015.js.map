{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/pages/accounts/accounts.component.html","./src/app/pages/accounts/components/account-dialog/account-dialog.component.html","./src/app/pages/dns/dns.component.html","./src/app/pages/domains/components/add-alias-dialog/add-alias-dialog.component.html","./src/app/pages/domains/components/add-domain-dialog/add-domain-dialog.component.html","./src/app/pages/domains/components/dkim-dialog/dkim-dialog.component.html","./src/app/pages/domains/domains.component.html","./src/app/pages/forwarders/components/forwarder-dialog/forwarder-dialog.component.html","./src/app/pages/forwarders/forwarders.component.html","./src/app/pages/login/login.component.html","./src/app/pages/profile/profile.component.html","./src/app/shared/components/dialog/dialog.component.html","./src/app/shared/components/error-snackbar/error-snackbar.component.html","./src/app/shared/components/fab-button/fab-button.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/pages/accounts/accounts.component.scss","./src/app/pages/accounts/accounts.component.ts","./src/app/pages/accounts/components/account-dialog/account-dialog.component.scss","./src/app/pages/accounts/components/account-dialog/account-dialog.component.ts","./src/app/pages/dns/dns.component.scss","./src/app/pages/dns/dns.component.ts","./src/app/pages/domains/components/add-alias-dialog/add-alias-dialog.component.scss","./src/app/pages/domains/components/add-alias-dialog/add-alias-dialog.component.ts","./src/app/pages/domains/components/add-domain-dialog/add-domain-dialog.component.scss","./src/app/pages/domains/components/add-domain-dialog/add-domain-dialog.component.ts","./src/app/pages/domains/components/dkim-dialog/dkim-dialog.component.scss","./src/app/pages/domains/components/dkim-dialog/dkim-dialog.component.ts","./src/app/pages/domains/domains.component.scss","./src/app/pages/domains/domains.component.ts","./src/app/pages/domains/domains.service.ts","./src/app/pages/forwarders/components/forwarder-dialog/forwarder-dialog.component.scss","./src/app/pages/forwarders/components/forwarder-dialog/forwarder-dialog.component.ts","./src/app/pages/forwarders/forwarders.component.scss","./src/app/pages/forwarders/forwarders.component.ts","./src/app/pages/login/login.component.scss","./src/app/pages/login/login.component.ts","./src/app/pages/profile/profile.component.scss","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.service.ts","./src/app/shared/components/dialog/dialog.component.scss","./src/app/shared/components/dialog/dialog.component.ts","./src/app/shared/components/error-snackbar/error-snackbar.component.scss","./src/app/shared/components/error-snackbar/error-snackbar.component.ts","./src/app/shared/components/error-snackbar/error-snackbar.service.ts","./src/app/shared/components/fab-button/fab-button.component.scss","./src/app/shared/components/fab-button/fab-button.component.ts","./src/app/shared/functions/formatBytes.function.ts","./src/app/shared/validators/address-username-validator.directive.ts","./src/app/shared/validators/ascii-validator.directive.ts","./src/app/shared/validators/forwarding-target-validator.directive.ts","./src/app/shared/validators/not-contains-validator.directive.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"(isHandset$ | async) === false && isFullscreen === false\\\"\\n  >\\n    <!-- Create all navigation items -->\\n    <mat-nav-list>\\n      <div class=\\\"nav-top-part\\\">\\n        <ng-container *ngFor=\\\"let navCategory of navCategories; first as isFirst\\\">\\n          <!-- Only add divider if not the first category in the list -->\\n          <mat-divider *ngIf=\\\"!isFirst\\\"></mat-divider>\\n          <h3 mat-subheader>{{ navCategory.title }}</h3>\\n\\n          <ng-container *ngFor=\\\"let navItem of navCategory.items\\\">\\n            <a\\n              mat-list-item\\n              *ngIf=\\\"navItem.routerLink; else href\\\"\\n              (click)=\\\"closeDrawerConditional()\\\"\\n              [routerLink]=\\\"navItem.routerLink\\\"\\n            >\\n              <mat-icon mat-list-icon>{{ navItem.icon }}</mat-icon>\\n              <h4 mat-line>{{ navItem.name }}</h4>\\n            </a>\\n            <ng-template #href>\\n              <a mat-list-item (click)=\\\"closeDrawerConditional()\\\" [href]=\\\"navItem.href\\\" target=\\\"_blank\\\">\\n                <mat-icon mat-list-icon>{{ navItem.icon }}</mat-icon>\\n                <h4 mat-line>{{ navItem.name }}</h4>\\n                <mat-icon class=\\\"external-link\\\">launch</mat-icon>\\n              </a>\\n            </ng-template>\\n          </ng-container>\\n        </ng-container>\\n      </div>\\n      <a class=\\\"profile-link\\\" mat-list-item (click)=\\\"closeDrawerConditional()\\\" routerLink=\\\"/profile\\\">\\n        <mat-icon mat-list-icon>account_circle</mat-icon>\\n        <h4 mat-line>{{profileService.user.username}}</h4>\\n      </a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content>\\n    <mat-toolbar *ngIf=\\\"isFullscreen === false\\\" color=\\\"primary\\\" [ngStyle]=\\\"{ 'z-index': 100 }\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\"\\n      >\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>{{ title }}</span>\\n    </mat-toolbar>\\n    <div [class.content]=\\\"isFullscreen === false\\\">\\n      <router-outlet></router-outlet>\\n      <!-- This is where the router will add a component based on the url -->\\n    </div>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","export default \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n  <mat-card>\\n    <mat-card-title>Your Email Accounts</mat-card-title>\\n    <mat-card-content\\n      >This is an overview of the email accounts you have access to. Here you can also add, edit and delete accounts\\n    </mat-card-content>\\n  </mat-card>\\n  <mat-card class=\\\"account-table-card\\\">\\n    <ng-template #loading>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"56px\\\"></td-loading-mask>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"48px\\\"></td-loading-mask>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"48px\\\"></td-loading-mask>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"48px\\\"></td-loading-mask>\\n    </ng-template>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n      <mat-form-field appearance=\\\"fill\\\">\\n        <mat-label>Filter</mat-label>\\n        <input matInput type=\\\"search\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" />\\n      </mat-form-field>\\n      <mat-paginator\\n        [pageSizeOptions]=\\\"[10, 25, 50, 100, 200, 300, 400, 500]\\\"\\n        pageSize=\\\"50\\\"\\n        showFirstLastButtons\\n      ></mat-paginator>\\n    </div>\\n    <ng-container *ngIf=\\\"accountSubscription.closed; else loading\\\">\\n      <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n        <ng-container matColumnDef=\\\"name\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"name\\\"> {{ row.name }} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"address\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Address </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"address\\\"> {{ row.address }} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"quotaUsedFormatted\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header arrowPosition=\\\"before\\\"> Used </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"quotaUsedFormatted\\\"> {{ row.quotaUsedFormatted }} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"quotaAllowedFormatted\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Quota </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"quotaAllowedFormatted\\\">\\n            {{ row.quotaAllowedFormatted }}\\n          </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n          <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"actions\\\">\\n            <button\\n              [routerLink]=\\\"['/accounts', row.id]\\\"\\n              matTooltip=\\\"Modify account\\\"\\n              matTooltipPosition=\\\"left\\\"\\n              matTooltipShowDelay=\\\"500\\\"\\n              mat-icon-button\\n              aria-label=\\\"Modify account\\\"\\n            >\\n              <mat-icon>edit</mat-icon>\\n            </button>\\n            <button\\n              (click)=\\\"removeConfirmDialog(row.id, row.address)\\\"\\n              matTooltip=\\\"Remove this account\\\"\\n              matTooltipPosition=\\\"left\\\"\\n              matTooltipShowDelay=\\\"500\\\"\\n              mat-icon-button\\n              aria-label=\\\"Remove this account\\\"\\n            >\\n              <mat-icon>delete</mat-icon>\\n            </button>\\n          </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"> </mat-row>\\n      </mat-table>\\n    </ng-container>\\n  </mat-card>\\n</div>\\n<app-fab-button (click)=\\\"accountDialog()\\\" icon=\\\"add\\\"></app-fab-button>\\n\"","export default \"<h2 mat-dialog-title>{{ isModifyDialog ? 'Modify' : 'New' }} email account</h2>\\n<mat-dialog-content>\\n  <ng-template #loader>\\n    <div class=\\\"loader-container\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"calc(10px + 1.34375em)\\\">\\n      <td-loading-mask class=\\\"loading-field\\\" width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n      <div [fxLayout]=\\\"(isHandset$ | async) ? 'column' : 'row'\\\" class=\\\"row-container\\\" fxLayoutGap=\\\"10px\\\">\\n        <td-loading-mask class=\\\"loading-field\\\" width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n        <div *ngIf=\\\"!(isHandset$ | async)\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\n          @\\n        </div>\\n        <td-loading-mask class=\\\"loading-field\\\" width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n      </div>\\n      <td-loading-mask class=\\\"loading-field\\\" width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n      <div [fxLayout]=\\\"(isHandset$ | async) ? 'column' : 'row'\\\" fxLayoutGap=\\\"10px\\\" class=\\\"row-container\\\">\\n        <td-loading-mask class=\\\"loading-field\\\" width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n        <td-loading-mask class=\\\"loading-field\\\" width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n        <td-loading-mask class=\\\"loading-field\\\" width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n      </div>\\n      <div [fxLayout]=\\\"(isHandset$ | async) ? 'column' : 'row'\\\" fxLayoutGap=\\\"10px\\\" class=\\\"row-container\\\">\\n        <td-loading-mask class=\\\"loading-field\\\" width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n        <td-loading-mask class=\\\"loading-field\\\" width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n        <td-loading-mask class=\\\"loading-field\\\" width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"end\\\">\\n        <mat-spinner-button (btnClick)=\\\"dialogRef.close()\\\" [options]=\\\"cancelButtonConfig\\\"></mat-spinner-button>\\n        <td-loading-mask width=\\\"66px\\\" height=\\\"36px\\\"></td-loading-mask>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <ng-container\\n    *ngIf=\\\"\\n      (!isModifyDialog && domainsService.domainsSubscription && domainsService.domainsSubscription.closed) ||\\n        (accountDetailsSubscription && accountDetailsSubscription.closed);\\n      else loader\\n    \\\"\\n  >\\n  <!-- <ng-container *ngIf=\\\"false; else loader\\\"> -->\\n    <form [formGroup]=\\\"accountForm\\\" id=\\\"accountForm\\\" (ngSubmit)=\\\"updateAccount()\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n      <mat-form-field appearance=\\\"fill\\\">\\n        <mat-label>Name</mat-label>\\n        <input matInput formControlName=\\\"name\\\" />\\n      </mat-form-field>\\n\\n      <div [fxLayout]=\\\"(isHandset$ | async) ? 'column' : 'row'\\\" class=\\\"row-container\\\" fxLayoutGap=\\\"10px\\\">\\n        <mat-form-field appearance=\\\"fill\\\" [class.user-input-right]=\\\"!(isHandset$ | async)\\\">\\n          <mat-label>User</mat-label>\\n          <input matInput formControlName=\\\"addressUser\\\" [required]=\\\"isModifyDialog ? null : 'required'\\\" />\\n          <mat-error *ngIf=\\\"accountForm.controls['addressUser'].hasError('required')\\\">\\n            User is required\\n          </mat-error>\\n          <mat-error *ngIf=\\\"accountForm.controls['addressUser'].hasError('AddressUsername')\\\">\\n            Invalid email address format\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <div *ngIf=\\\"!(isHandset$ | async)\\\" class=\\\"at-symbol\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\n          @\\n        </div>\\n\\n        <mat-form-field appearance=\\\"fill\\\">\\n          <mat-label>Domain</mat-label>\\n          <span *ngIf=\\\"isHandset$ | async\\\" matPrefix>@</span>\\n          <mat-select formControlName=\\\"domain\\\" [required]=\\\"isModifyDialog ? null : 'required'\\\">\\n            <ng-container *ngFor=\\\"let domain of domainsService.domainsStrings; let i = index\\\">\\n              <mat-option [value]=\\\"domain\\\">{{ domain }}</mat-option>\\n            </ng-container>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"accountForm.controls['domain'].hasError('required')\\\">\\n            Domain is required\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <mat-form-field appearance=\\\"fill\\\">\\n        <mat-label>Password</mat-label>\\n        <input matInput type=\\\"password\\\" formControlName=\\\"password\\\" [required]=\\\"isModifyDialog ? null : 'required'\\\" />\\n        <mat-error *ngIf=\\\"accountForm.controls['password'].hasError('required')\\\">\\n          Password is required\\n        </mat-error>\\n        <mat-error *ngIf=\\\"accountForm.controls['password'].hasError('minlength')\\\">\\n          Password must be at least 8 characters\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <div [fxLayout]=\\\"(isHandset$ | async) ? 'column' : 'row'\\\" fxLayoutGap=\\\"10px\\\" class=\\\"row-container\\\">\\n        <mat-form-field appearance=\\\"fill\\\">\\n          <mat-label>Spam treshold</mat-label>\\n          <input matInput type=\\\"number\\\" formControlName=\\\"spamLevel\\\" />\\n          <mat-hint>0-100</mat-hint>\\n          <mat-error\\n            *ngIf=\\\"\\n              accountForm.controls['spamLevel'].hasError('min') || accountForm.controls['spamLevel'].hasError('max')\\n            \\\"\\n          >\\n            Treshold must be between 0-100\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"fill\\\">\\n          <mat-label>Quota</mat-label>\\n          <input matInput type=\\\"number\\\" formControlName=\\\"quota\\\" />\\n          <span matSuffix>MiB</span>\\n          <mat-hint *ngIf=\\\"isModifyDialog\\\"\\n            >Current usage: {{ math.round(accountDetails.limits.quota.used / math.pow(1024, 2)) }}MiB</mat-hint\\n          >\\n          <mat-error *ngIf=\\\"accountForm.controls['quota'].hasError('min')\\\">\\n            Quota must be above 0\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"fill\\\">\\n          <mat-label>Disabled services</mat-label>\\n          <mat-select multiple formControlName=\\\"disabledScopes\\\">\\n            <mat-option value=\\\"smtp\\\">SMTP</mat-option>\\n            <mat-option value=\\\"imap\\\">IMAP</mat-option>\\n            <mat-option value=\\\"pop3\\\">POP3</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n\\n      <div [fxLayout]=\\\"(isHandset$ | async) ? 'column' : 'row'\\\" fxLayoutGap=\\\"10px\\\" class=\\\"row-container\\\">\\n        <mat-form-field appearance=\\\"fill\\\">\\n          <mat-label>Send limit</mat-label>\\n          <input matInput type=\\\"number\\\" formControlName=\\\"sendLimit\\\" />\\n          <mat-hint *ngIf=\\\"isModifyDialog\\\">Current usage: {{ accountDetails.limits.send.used }}</mat-hint>\\n          <mat-error\\n            *ngIf=\\\"\\n              accountForm.controls['sendLimit'].hasError('min') || accountForm.controls['sendLimit'].hasError('max')\\n            \\\"\\n          >\\n            Limit must be between 1-300\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"fill\\\">\\n          <mat-label>Receive limit</mat-label>\\n          <input matInput type=\\\"number\\\" formControlName=\\\"receiveLimit\\\" />\\n          <mat-hint *ngIf=\\\"isModifyDialog\\\">Current usage: {{ accountDetails.limits.receive.used }}</mat-hint>\\n          <mat-error *ngIf=\\\"accountForm.controls['receiveLimit'].hasError('min')\\\">\\n            Limit must be above 0\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"fill\\\">\\n          <mat-label>Forward limit</mat-label>\\n          <input matInput type=\\\"number\\\" formControlName=\\\"forwardLimit\\\" />\\n          <mat-hint *ngIf=\\\"isModifyDialog\\\">Current usage: {{ accountDetails.limits.forward.used }}</mat-hint>\\n          <mat-error\\n            *ngIf=\\\"\\n              accountForm.controls['forwardLimit'].hasError('min') ||\\n              accountForm.controls['forwardLimit'].hasError('max')\\n            \\\"\\n          >\\n            Limit must be between 1-200\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"end\\\">\\n        <mat-spinner-button (btnClick)=\\\"dialogRef.close()\\\" [options]=\\\"cancelButtonConfig\\\"></mat-spinner-button>\\n        <div (click)=\\\"forceCheckForm()\\\">\\n          <mat-spinner-button [options]=\\\"saveButtonConfig\\\"></mat-spinner-button>\\n        </div>\\n      </div>\\n    </form>\\n  </ng-container>\\n</mat-dialog-content>\\n\"","export default \"<!-- Switch to row or column mode depending on mobile or not -->\\n<div [fxLayout]=\\\"(isHandset$ | async) ? 'column' : 'row'\\\" fxLayoutGap=\\\"10px\\\">\\n  <ng-template #loading>\\n    <mat-spinner diameter=\\\"50\\\"></mat-spinner>\\n  </ng-template>\\n  <mat-card fxFlex=\\\"30%\\\" [fxFlexAlign]=\\\"(isHandset$ | async) ? null : 'start'\\\">\\n    <mat-card-title>DNS records check</mat-card-title>\\n    <mat-card-content\\n      >Select a domain to view the needed records for it. A check will also be performed to see if you've set the\\n      records correctly.</mat-card-content\\n    >\\n  </mat-card>\\n  <div fxFlex=\\\"70%\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n    <form\\n      *ngIf=\\\"domainsService.domainsSubscription && domainsService.domainsSubscription.closed; else loading\\\"\\n      [formGroup]=\\\"domainForm\\\"\\n      id=\\\"domainForm\\\"\\n    >\\n      <mat-form-field appearance=\\\"fill\\\" class=\\\"domain-field\\\">\\n        <mat-label>Domain</mat-label>\\n        <mat-select formControlName=\\\"domain\\\">\\n          <ng-container *ngFor=\\\"let domain of domainsService.domainsAndAliasesStrings; let i = index\\\">\\n            <mat-option [value]=\\\"domain\\\">{{ domain }}</mat-option>\\n          </ng-container>\\n        </mat-select>\\n      </mat-form-field>\\n    </form>\\n    <ng-container *ngIf=\\\"selectedDomain\\\">\\n      <ng-container *ngIf=\\\"dnsCheckSubscription && dnsCheckSubscription.closed; else loading\\\">\\n        <mat-card>\\n          <mat-card-title class=\\\"dns-card-title\\\">Valid records for {{ selectedDomain }}</mat-card-title>\\n          <h5 class=\\\"table-title\\\">MX records</h5>\\n          <mat-table [dataSource]=\\\"correctMxDataSource\\\">\\n            <ng-container matColumnDef=\\\"name\\\">\\n              <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"name\\\"> {{ selectedDomain }} </mat-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"server\\\">\\n              <mat-header-cell *matHeaderCellDef> Mail server </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"server\\\"> {{ row.exchange }} </mat-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"priority\\\">\\n              <mat-header-cell *matHeaderCellDef> Priority </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"priority\\\"> {{ row.priority }} </mat-cell>\\n            </ng-container>\\n            <mat-header-row *matHeaderRowDef=\\\"correctMxDisplayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: correctMxDisplayedColumns\\\"></mat-row>\\n          </mat-table>\\n          <h5 class=\\\"table-title\\\">TXT records</h5>\\n          <mat-table [dataSource]=\\\"correctTxtDataSource\\\">\\n            <ng-container matColumnDef=\\\"name\\\">\\n              <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"name\\\">\\n                {{\\n                  row.isDkim ? dnsCheck.correctValues.dkim.selector + '._domainkey.' + selectedDomain : selectedDomain\\n                }}\\n              </mat-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"content\\\">\\n              <mat-header-cell *matHeaderCellDef> Content </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"content\\\" [class.dkim-content]=\\\"row.isDkim\\\">\\n                {{ row.content }}\\n              </mat-cell>\\n            </ng-container>\\n            <mat-header-row *matHeaderRowDef=\\\"correctTxtDisplayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: correctTxtDisplayedColumns\\\"> </mat-row>\\n          </mat-table>\\n        </mat-card>\\n        <mat-card>\\n          <ng-template #noErrors>\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n              <mat-icon mat-list-icon class=\\\"success-icon\\\">check_circle</mat-icon>\\n              <mat-card-title class=\\\"dns-card-title\\\">DNS config for {{ selectedDomain }} looks valid</mat-card-title>\\n            </div>\\n          </ng-template>\\n\\n          <ng-container *ngIf=\\\"dnsCheck.errors.length !== 0; else noErrors\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n              <mat-icon mat-list-icon class=\\\"error-icon\\\">error</mat-icon>\\n              <mat-card-title class=\\\"dns-card-title\\\">Invalid DNS config found for {{ selectedDomain }}</mat-card-title>\\n            </div>\\n            <mat-table [dataSource]=\\\"errorDataSource\\\">\\n              <ng-container matColumnDef=\\\"type\\\">\\n                <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"type\\\"> {{ row.type }} </mat-cell>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"message\\\">\\n                <mat-header-cell *matHeaderCellDef> Error message </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"message\\\"> {{ row.message }} </mat-cell>\\n              </ng-container>\\n              <mat-header-row *matHeaderRowDef=\\\"errorDisplayedColumns\\\"></mat-header-row>\\n              <mat-row *matRowDef=\\\"let row; columns: errorDisplayedColumns\\\"></mat-row>\\n            </mat-table>\\n          </ng-container>\\n        </mat-card>\\n      </ng-container>\\n    </ng-container>\\n  </div>\\n</div>\\n\"","export default \"<h2 mat-dialog-title>Add Alias</h2>\\n<mat-dialog-content>\\n  <form (ngSubmit)=\\\"addAlias()\\\" [formGroup]=\\\"aliasForm\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Existing domain</mat-label>\\n      <mat-select formControlName=\\\"existingDomain\\\" required>\\n        <ng-container *ngFor=\\\"let domain of domainsService.domainsStrings; let i = index\\\">\\n          <mat-option [value]=\\\"domain\\\">{{ domain }}</mat-option>\\n        </ng-container>\\n      </mat-select>\\n      <mat-error *ngIf=\\\"aliasForm.controls['existingDomain'].hasError('required')\\\">\\n        Existing domain is required\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Alias domain</mat-label>\\n      <input type=\\\"text\\\" matInput formControlName=\\\"aliasDomain\\\" required />\\n      <mat-error *ngIf=\\\"aliasForm.controls['aliasDomain'].hasError('pattern')\\\">\\n        Not a valid domain name\\n      </mat-error>\\n      <mat-error *ngIf=\\\"aliasForm.controls['aliasDomain'].hasError('required')\\\">\\n        Alias domain is required\\n      </mat-error>\\n    </mat-form-field>\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"end\\\">\\n      <mat-spinner-button (btnClick)=\\\"dialogRef.close()\\\" [options]=\\\"cancelButtonConfig\\\"></mat-spinner-button>\\n      <mat-spinner-button [options]=\\\"addButtonConfig\\\"></mat-spinner-button>\\n    </div>\\n  </form>\\n</mat-dialog-content>\\n\"","export default \"<h2 mat-dialog-title>Add Domain</h2>\\n<mat-dialog-content>\\n  <form (ngSubmit)=\\\"addDomain()\\\">\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Domain</mat-label>\\n      <input type=\\\"text\\\" matInput required [formControl]=\\\"domainInput\\\" />\\n      <mat-error *ngIf=\\\"domainInput.hasError('pattern')\\\">\\n        Not a valid domain name\\n      </mat-error>\\n    </mat-form-field>\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"end\\\">\\n      <mat-spinner-button (btnClick)=\\\"dialogRef.close()\\\" [options]=\\\"cancelButtonConfig\\\"></mat-spinner-button>\\n      <mat-spinner-button [options]=\\\"addButtonConfig\\\"></mat-spinner-button>\\n    </div>\\n  </form>\\n</mat-dialog-content>\\n\"","export default \"<h2 mat-dialog-title>{{ isModifyDialog ? 'Modify' : 'New' }} DKIM for {{ data.domain }}</h2>\\n<mat-dialog-content>\\n  <form [formGroup]=\\\"dkimForm\\\" id=\\\"dkimForm\\\" (ngSubmit)=\\\"updateDkim()\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n    <ng-template #selectorLoader>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"60px\\\"></td-loading-mask>\\n    </ng-template>\\n    <ng-container *ngIf=\\\"!isModifyDialog || (isModifyDialog && dkimKeySubscription.closed); else selectorLoader\\\">\\n      <mat-form-field appearance=\\\"fill\\\">\\n        <mat-label>Selector</mat-label>\\n        <input matInput formControlName=\\\"selector\\\" required />\\n        <mat-hint>{{ dkimForm.controls['selector'].value }}._domainkey.{{ data.domain }}</mat-hint>\\n        <mat-error *ngIf=\\\"dkimForm.controls['selector'].hasError('required')\\\">\\n          Selector is required\\n        </mat-error>\\n      </mat-form-field>\\n    </ng-container>\\n    <mat-form-field appearance=\\\"fill\\\" class=\\\"text-area\\\">\\n      <mat-label>Private key</mat-label>\\n      <textarea matInput formControlName=\\\"privateKey\\\"></textarea>\\n      <mat-hint>{{\\n        isModifyDialog ? 'Leave empty to keep the same key' : 'Leave empty to generate a new key'\\n      }}</mat-hint>\\n    </mat-form-field>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\">\\n        <mat-spinner-button\\n          *ngIf=\\\"isModifyDialog\\\"\\n          (btnClick)=\\\"disableDialog()\\\"\\n          [options]=\\\"disableButtonConfig\\\"\\n        ></mat-spinner-button>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"10px\\\">\\n        <mat-spinner-button (btnClick)=\\\"dialogRef.close()\\\" [options]=\\\"cancelButtonConfig\\\"></mat-spinner-button>\\n        <div (click)=\\\"forceCheckForm()\\\">\\n          <mat-spinner-button [options]=\\\"saveButtonConfig\\\"></mat-spinner-button>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</mat-dialog-content>\\n\"","export default \"<!-- Switch to row or column mode depending on mobile or not -->\\n<div [fxLayout]=\\\"(isHandset$ | async) ? 'column' : 'row'\\\" fxLayoutGap=\\\"10px\\\">\\n  <mat-card fxFlex=\\\"30%\\\" [fxFlexAlign]=\\\"(isHandset$ | async) ? null : 'start'\\\">\\n    <mat-card-title>Your domains</mat-card-title>\\n    <mat-card-content>\\n      <p>\\n        These are the domains you have added to your account. You have access to any accounts and forwarders associated\\n        to these domains. Here you can add and delete domains, and manage the DKIM keys for them as well.\\n      </p>\\n      <p>\\n        Do note that when you delete a domain, the accounts will be deleted with it.\\n      </p>\\n    </mat-card-content>\\n  </mat-card>\\n  <mat-card fxFlex=\\\"70%\\\">\\n    <ng-template #loader>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"56px\\\"></td-loading-mask>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"48px\\\"></td-loading-mask>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"48px\\\"></td-loading-mask>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"48px\\\"></td-loading-mask>\\n    </ng-template>\\n    <ng-container *ngIf=\\\"domainsService.domainsSubscription && domainsService.domainsSubscription.closed; else loader\\\">\\n      <mat-table [dataSource]=\\\"dataSource\\\">\\n        <ng-container matColumnDef=\\\"domain\\\">\\n          <mat-header-cell *matHeaderCellDef> Domain </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"domain\\\">\\n            <mat-icon *ngIf=\\\"!row.admin\\\">subdirectory_arrow_right</mat-icon> {{ row.domain }}\\n          </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n          <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"actions\\\">\\n            <button\\n              [routerLink]=\\\"['/domains', row.domain, 'dkim', row.dkim ? 'edit' : 'new']\\\"\\n              [matTooltip]=\\\"row.dkim ? 'Edit DKIM' : 'Add DKIM'\\\"\\n              matTooltipPosition=\\\"left\\\"\\n              matTooltipShowDelay=\\\"500\\\"\\n              mat-icon-button\\n            >\\n              <mat-icon [class.grayed-out]=\\\"row.dkim\\\">vpn_key</mat-icon>\\n              <mat-icon *ngIf=\\\"row.dkim\\\" class=\\\"overlap-icon\\\">{{ row.dkim ? 'edit' : 'close' }}</mat-icon>\\n            </button>\\n            <ng-container *ngIf=\\\"row.admin; else deleteAlias\\\">\\n              <button\\n                (click)=\\\"removeDomainConfirmDialog(row.domain)\\\"\\n                matTooltip=\\\"Remove this domain\\\"\\n                matTooltipPosition=\\\"left\\\"\\n                matTooltipShowDelay=\\\"500\\\"\\n                mat-icon-button\\n              >\\n                <mat-icon>delete</mat-icon>\\n              </button>\\n            </ng-container>\\n            <ng-template #deleteAlias>\\n              <button\\n                (click)=\\\"removeAliasConfirmDialog(row.aliasOf, row.domain)\\\"\\n                matTooltip=\\\"Remove this alias\\\"\\n                matTooltipPosition=\\\"left\\\"\\n                matTooltipShowDelay=\\\"500\\\"\\n                mat-icon-button\\n              >\\n                <mat-icon>link_off</mat-icon>\\n              </button>\\n            </ng-template>\\n          </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"> </mat-row>\\n      </mat-table>\\n    </ng-container>\\n  </mat-card>\\n</div>\\n<router-outlet></router-outlet>\\n\\n<ng-container\\n  *ngIf=\\\"\\n    domainsService.domainsSubscription && domainsService.domainsSubscription.closed && dataSource.data.length > 0;\\n    else addDomain\\n  \\\"\\n>\\n  <eco-fab-speed-dial animationMode=\\\"scale\\\">\\n    <eco-fab-speed-dial-trigger spin=\\\"true\\\">\\n      <button mat-fab><mat-icon class=\\\"spin135\\\">add</mat-icon></button>\\n    </eco-fab-speed-dial-trigger>\\n\\n    <eco-fab-speed-dial-actions>\\n      <button mat-mini-fab (click)=\\\"addDomainDialog()\\\" matTooltip=\\\"Add domain\\\" matTooltipPosition=\\\"left\\\">\\n        <mat-icon>domain</mat-icon>\\n      </button>\\n      <button mat-mini-fab (click)=\\\"addAliasDialog()\\\" matTooltip=\\\"Add alias\\\" matTooltipPosition=\\\"left\\\">\\n        <mat-icon>link</mat-icon>\\n      </button>\\n    </eco-fab-speed-dial-actions>\\n  </eco-fab-speed-dial>\\n</ng-container>\\n<ng-template #addDomain>\\n  <app-fab-button icon=\\\"add\\\" (click)=\\\"addDomainDialog()\\\"></app-fab-button>\\n</ng-template>\\n\"","export default \"<h2 mat-dialog-title>{{ isModifyDialog ? 'Modify' : 'New' }} forwarder</h2>\\n<mat-dialog-content>\\n  <ng-template #loader>\\n    <div class=\\\"loader-container\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"calc(10px + 1.34375em)\\\">\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n      <div [fxLayout]=\\\"(isHandset$ | async) ? 'column' : 'row'\\\" class=\\\"row-container\\\" fxLayoutGap=\\\"10px\\\">\\n        <td-loading-mask width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n        <div *ngIf=\\\"!(isHandset$ | async)\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\n          @\\n        </div>\\n        <td-loading-mask width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n      </div>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"73.3px\\\"></td-loading-mask>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"59.5px\\\"></td-loading-mask>\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"end\\\">\\n        <mat-spinner-button (btnClick)=\\\"dialogRef.close()\\\" [options]=\\\"cancelButtonConfig\\\"></mat-spinner-button>\\n        <td-loading-mask width=\\\"66px\\\" height=\\\"36px\\\"></td-loading-mask>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <ng-container\\n    *ngIf=\\\"\\n      (!isModifyDialog && domainsService.domainsSubscription && domainsService.domainsSubscription.closed) ||\\n        (isModifyDialog &&\\n          domainsService.domainsSubscription &&\\n          domainsService.domainsSubscription.closed &&\\n          forwarderDetailsSubscription &&\\n          forwarderDetailsSubscription.closed);\\n      else loader\\n    \\\"\\n  >\\n    <form\\n      [formGroup]=\\\"forwarderForm\\\"\\n      id=\\\"forwarderForm\\\"\\n      (ngSubmit)=\\\"updateForwarder()\\\"\\n      fxLayout=\\\"column\\\"\\n      fxLayoutGap=\\\"10px\\\"\\n    >\\n      <mat-form-field appearance=\\\"fill\\\">\\n        <mat-label>Name</mat-label>\\n        <input matInput formControlName=\\\"name\\\" />\\n      </mat-form-field>\\n\\n      <div [fxLayout]=\\\"(isHandset$ | async) ? 'column' : 'row'\\\" class=\\\"row-container\\\" fxLayoutGap=\\\"10px\\\">\\n        <mat-form-field appearance=\\\"fill\\\" [class.user-input-right]=\\\"!(isHandset$ | async)\\\">\\n          <mat-label>User</mat-label>\\n          <input matInput formControlName=\\\"addressUser\\\" [required]=\\\"isModifyDialog ? null : 'required'\\\" />\\n          <mat-error *ngIf=\\\"forwarderForm.controls['addressUser'].hasError('required')\\\">\\n            User is required\\n          </mat-error>\\n          <mat-error *ngIf=\\\"forwarderForm.controls['addressUser'].hasError('AddressUsername')\\\">\\n            Invalid email address format\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <div *ngIf=\\\"!(isHandset$ | async)\\\" class=\\\"at-symbol\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\n          @\\n        </div>\\n\\n        <mat-form-field appearance=\\\"fill\\\">\\n          <mat-label>Domain</mat-label>\\n          <span *ngIf=\\\"isHandset$ | async\\\" matPrefix>@</span>\\n          <mat-select formControlName=\\\"domain\\\" [required]=\\\"isModifyDialog ? null : 'required'\\\">\\n            <ng-container *ngFor=\\\"let domain of domainsService.domainsStrings; let i = index\\\">\\n              <mat-option [value]=\\\"domain\\\">{{ domain }}</mat-option>\\n            </ng-container>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"forwarderForm.controls['domain'].hasError('required')\\\">\\n            Domain is required\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <mat-form-field appearance=\\\"fill\\\">\\n        <mat-label>Forwarding targets</mat-label>\\n        <mat-chip-list #targetsChipList formControlName=\\\"newTarget\\\">\\n          <mat-chip\\n            *ngFor=\\\"let forwardTarget of forwardTargets\\\"\\n            selectable=\\\"false\\\"\\n            removable=\\\"true\\\"\\n            (removed)=\\\"removeTarget(forwardTarget)\\\"\\n          >\\n            {{ forwardTarget }}\\n            <mat-icon matChipRemove>cancel</mat-icon>\\n          </mat-chip>\\n          <input\\n            matInput\\n            formControlName=\\\"newTarget\\\"\\n            [matChipInputFor]=\\\"targetsChipList\\\"\\n            matChipInputAddOnBlur=\\\"true\\\"\\n            [matChipInputSeparatorKeyCodes]=\\\"newTargetSeperators\\\"\\n            (matChipInputTokenEnd)=\\\"addTarget($event)\\\"\\n          />\\n        </mat-chip-list>\\n        <mat-error *ngIf=\\\"forwarderForm.controls['newTarget'].hasError('forwardingTarget')\\\">\\n          Not an email address, smtp address, or http address\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"fill\\\">\\n        <mat-label>Forward limit</mat-label>\\n        <input matInput type=\\\"number\\\" formControlName=\\\"forwardLimit\\\" />\\n        <mat-hint *ngIf=\\\"isModifyDialog\\\">Current usage: {{ forwarderDetails.limits.forward.used }}</mat-hint>\\n        <mat-error\\n          *ngIf=\\\"\\n            forwarderForm.controls['forwardLimit'].hasError('min') ||\\n            forwarderForm.controls['forwardLimit'].hasError('max')\\n          \\\"\\n        >\\n          Limit must be between 1-200\\n        </mat-error>\\n      </mat-form-field>\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"end\\\">\\n        <mat-spinner-button (btnClick)=\\\"dialogRef.close()\\\" [options]=\\\"cancelButtonConfig\\\"></mat-spinner-button>\\n        <div (click)=\\\"forceCheckForm()\\\">\\n          <mat-spinner-button [options]=\\\"saveButtonConfig\\\"></mat-spinner-button>\\n        </div>\\n      </div>\\n    </form>\\n  </ng-container>\\n</mat-dialog-content>\\n\"","export default \"<!-- Switch to row or column mode depending on mobile or not -->\\n<div [fxLayout]=\\\"(isHandset$ | async) ? 'column' : 'row'\\\" fxLayoutGap=\\\"10px\\\">\\n  <mat-card fxFlex=\\\"30%\\\" [fxFlexAlign]=\\\"(isHandset$ | async) ? null : 'start'\\\">\\n    <mat-card-title>Your forwarders</mat-card-title>\\n    <mat-card-content\\n      >Here you can manage your forwarders. You can forward to any email address, smtp server, or HTTP server (POST\\n      request).</mat-card-content\\n    >\\n  </mat-card>\\n  <mat-card fxFlex=\\\"70%\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n      <mat-form-field appearance=\\\"fill\\\">\\n        <mat-label>Filter</mat-label>\\n        <input matInput type=\\\"search\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" />\\n      </mat-form-field>\\n      <mat-paginator\\n        [pageSizeOptions]=\\\"[10, 25, 50, 100, 200, 300, 400, 500]\\\"\\n        pageSize=\\\"50\\\"\\n        showFirstLastButtons\\n      ></mat-paginator>\\n    </div>\\n    <ng-template #loader>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"56px\\\"></td-loading-mask>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"48px\\\"></td-loading-mask>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"48px\\\"></td-loading-mask>\\n      <td-loading-mask width=\\\"100%\\\" height=\\\"48px\\\"></td-loading-mask>\\n    </ng-template>\\n    <ng-container *ngIf=\\\"forwarderSubscription.closed; else loader\\\">\\n      <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n        <ng-container matColumnDef=\\\"address\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Forward address </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"address\\\"> {{ row.address }} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n          <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" data-label=\\\"actions\\\">\\n            <button\\n              [routerLink]=\\\"['/forwarders', row.id]\\\"\\n              matTooltip=\\\"Modify forwarder\\\"\\n              matTooltipPosition=\\\"left\\\"\\n              matTooltipShowDelay=\\\"500\\\"\\n              mat-icon-button\\n              aria-label=\\\"Modify forwarder\\\"\\n            >\\n              <mat-icon>edit</mat-icon>\\n            </button>\\n            <button\\n              (click)=\\\"removeConfirmDialog(row.id, row.address)\\\"\\n              matTooltip=\\\"Remove forwarder\\\"\\n              matTooltipPosition=\\\"left\\\"\\n              matTooltipShowDelay=\\\"500\\\"\\n              mat-icon-button\\n              aria-label=\\\"Remove forwarder\\\"\\n            >\\n              <mat-icon>delete</mat-icon>\\n            </button>\\n          </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"> </mat-row>\\n      </mat-table>\\n    </ng-container>\\n  </mat-card>\\n</div>\\n<app-fab-button icon=\\\"add\\\" (click)=\\\"forwarderDialog()\\\"></app-fab-button>\\n\"","export default \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"layout-center\\\" [class.is-handset]=\\\"isHandset$ | async\\\">\\n  <mat-card [class.is-handset]=\\\"isHandset$ | async\\\">\\n    <mat-card-title>Login</mat-card-title>\\n    <mat-card-content>\\n      <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n          <mat-form-field appearance=\\\"fill\\\">\\n            <mat-label>Username</mat-label>\\n            <input type=\\\"text\\\" matInput formControlName=\\\"username\\\" required />\\n            <mat-error *ngIf=\\\"loginForm.controls['username'].hasError('required')\\\">\\n              Username is required\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field appearance=\\\"fill\\\">\\n            <mat-label>Password</mat-label>\\n            <input type=\\\"password\\\" matInput formControlName=\\\"password\\\" required />\\n            <mat-error *ngIf=\\\"loginForm.controls['password'].hasError('required')\\\">\\n              Password is required\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <div align=\\\"end\\\">\\n          <mat-spinner-button type=\\\"submit\\\" [options]=\\\"loginButtonConfig\\\"></mat-spinner-button>\\n        </div>\\n      </form>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\"","export default \"<div class=\\\"single-column-content\\\">\\n  <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n    <mat-card>\\n      <mat-card-title>{{ profileService.user.username }}</mat-card-title>\\n      <mat-card-content>\\n        <p>\\n          You are logged in as {{ profileService.user.username }}, you've got access to {{ quota.formatted }} of\\n          storage.\\n        </p>\\n      </mat-card-content>\\n      <mat-card-actions>\\n        <button (click)=\\\"logout()\\\" mat-button color=\\\"warn\\\">LOG OUT</button>\\n        <button (click)=\\\"logoutAllDialog()\\\" mat-button color=\\\"warn\\\">LOG OUT FROM ALL DEVICES</button>\\n      </mat-card-actions>\\n    </mat-card>\\n    <mat-card>\\n      <mat-card-title>Storage used</mat-card-title>\\n      <mat-card-content>\\n        <p>Currently using {{ usage.bytes / quota.bytes | percent: '1.0-2' }} of storage.</p>\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n          <mat-progress-bar\\n            fxFlexAlign=\\\"center\\\"\\n            [mode]=\\\"calculateStorageSubscription && calculateStorageSubscription.closed ? 'determinate' : 'query'\\\"\\n            value=\\\"{{ (usage.bytes / quota.bytes) * 100 | number: '1.0-2' }}\\\"\\n          ></mat-progress-bar>\\n          <p class=\\\"usage-text\\\">{{ usage.formatted }}/{{ quota.formatted }}</p>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n    <mat-card>\\n      <mat-card-title>Change username/password</mat-card-title>\\n      <mat-card-content>\\n        <form [formGroup]=\\\"loginDetailsForm\\\" (ngSubmit)=\\\"changeLoginDetails()\\\">\\n          <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n            <mat-form-field appearance=\\\"fill\\\">\\n              <mat-label>Username</mat-label>\\n              <input type=\\\"text\\\" matInput formControlName=\\\"username\\\" />\\n              <mat-error *ngIf=\\\"loginDetailsForm.controls['username'].hasError('isAscii')\\\">\\n                Username can only contain ASCII characters\\n              </mat-error>\\n              <mat-error *ngIf=\\\"loginDetailsForm.controls['username'].hasError('notContains')\\\">\\n                Username can not contain spaces\\n              </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"fill\\\">\\n              <mat-label>Password</mat-label>\\n              <input type=\\\"password\\\" matInput formControlName=\\\"password\\\" />\\n              <mat-error *ngIf=\\\"loginDetailsForm.controls['password'].hasError('required')\\\">\\n                Password is required\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div align=\\\"end\\\">\\n            <mat-spinner-button type=\\\"submit\\\" [options]=\\\"loginDetailsButtonConfig\\\"></mat-spinner-button>\\n          </div>\\n        </form>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","export default \"<h2 mat-dialog-title>{{ data.title }}</h2>\\n<mat-dialog-content>\\n  {{ data.text }}\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"end\\\">\\n  <ng-container *ngFor=\\\"let button of data.buttons\\\">\\n    <mat-spinner-button\\n      (btnClick)=\\\"button.callback ? button.callback(dialogRef) : dialogRef.close()\\\"\\n      [options]=\\\"button.options\\\"\\n    ></mat-spinner-button>\\n  </ng-container>\\n</mat-dialog-actions>\\n\"","export default \"<div class=\\\"flex-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n  <span>{{ message }}</span>\\n  <div *ngIf=\\\"errorDetails\\\" class=\\\"action\\\">\\n    <button mat-button (click)=\\\"showDetails()\\\" color='accent'>Details</button>\\n  </div>\\n</div>\"","export default \"<button mat-fab>\\n  <mat-icon>{{ icon }}</mat-icon>\\n</button>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { AccountsComponent } from './pages/accounts/accounts.component'\nimport { DnsComponent } from './pages/dns/dns.component'\nimport { DkimDialogEntryComponent } from './pages/domains/components/dkim-dialog/dkim-dialog.component'\nimport { DomainsComponent } from './pages/domains/domains.component'\nimport { ForwardersComponent } from './pages/forwarders/forwarders.component'\nimport { LoginComponent } from './pages/login/login.component'\nimport { ProfileComponent } from './pages/profile/profile.component'\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n    data: {\n      isFullscreen: true,\n    },\n  },\n  {\n    path: 'domains',\n    component: DomainsComponent,\n    data: {\n      title: 'Domains',\n    },\n    children: [\n      {\n        path: ':domain/dkim/:action',\n        component: DkimDialogEntryComponent,\n      },\n    ],\n  },\n  {\n    path: 'accounts',\n    redirectTo: 'accounts/',\n  },\n  {\n    path: 'accounts/:id',\n    component: AccountsComponent,\n    data: {\n      title: 'Email Accounts',\n    },\n  },\n  {\n    path: 'forwarders',\n    redirectTo: 'forwarders/',\n  },\n  {\n    path: 'forwarders/:id',\n    component: ForwardersComponent,\n    data: {\n      title: 'Forwarders',\n    },\n  },\n  {\n    path: 'dns',\n    component: DnsComponent,\n    data: {\n      title: 'DNS Check',\n    },\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    data: {\n      title: 'Profile',\n    },\n  },\n  {\n    path: '**',\n    redirectTo: 'accounts/',\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","export default \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 275px;\\n}\\n\\n.sidenav .mat-toolbar {\\n  background: inherit;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\n.content {\\n  margin: auto;\\n  padding: 20px;\\n  max-width: 1200px;\\n}\\n\\n.external-link {\\n  font-size: 16px;\\n  width: 16px;\\n  height: 16px;\\n  color: grey;\\n}\\n\\n.nav-top-part {\\n  margin-bottom: 70px;\\n}\\n\\n.profile-link.mat-list-item.mat-list-item-with-avatar {\\n  height: 70px;\\n  background-color: white;\\n  position: absolute;\\n  bottom: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWlyby9EZXYvRHVja3lQYW5lbC9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQ0NGOztBREVBO0VBQ0UsWUFBQTtBQ0NGOztBREVBO0VBQ0UsbUJBQUE7QUNDRjs7QURFQTtFQUNFLHdCQUFBO0VBQUEsZ0JBQUE7RUFDQSxNQUFBO0VBQ0EsVUFBQTtBQ0NGOztBREVBO0VBQ0UsWUFBQTtFQUNBLGFBQUE7RUFDQSxpQkFBQTtBQ0NGOztBREVBO0VBQ0UsZUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtBQ0NGOztBREVBO0VBQ0UsbUJBQUE7QUNDRjs7QURFQTtFQUNFLFlBQUE7RUFDQSx1QkFBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc2lkZW5hdiB7XG4gIHdpZHRoOiAyNzVweDtcbn1cblxuLnNpZGVuYXYgLm1hdC10b29sYmFyIHtcbiAgYmFja2dyb3VuZDogaW5oZXJpdDtcbn1cblxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxO1xufVxuXG4uY29udGVudCB7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMjBweDtcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XG59XG5cbi5leHRlcm5hbC1saW5rIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICB3aWR0aDogMTZweDtcbiAgaGVpZ2h0OiAxNnB4O1xuICBjb2xvcjogZ3JleTtcbn1cblxuLm5hdi10b3AtcGFydCB7XG4gIG1hcmdpbi1ib3R0b206IDcwcHg7XG59XG5cbi5wcm9maWxlLWxpbmsubWF0LWxpc3QtaXRlbS5tYXQtbGlzdC1pdGVtLXdpdGgtYXZhdGFyIHtcbiAgaGVpZ2h0OiA3MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG59IiwiLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc2lkZW5hdiB7XG4gIHdpZHRoOiAyNzVweDtcbn1cblxuLnNpZGVuYXYgLm1hdC10b29sYmFyIHtcbiAgYmFja2dyb3VuZDogaW5oZXJpdDtcbn1cblxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxO1xufVxuXG4uY29udGVudCB7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMjBweDtcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XG59XG5cbi5leHRlcm5hbC1saW5rIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICB3aWR0aDogMTZweDtcbiAgaGVpZ2h0OiAxNnB4O1xuICBjb2xvcjogZ3JleTtcbn1cblxuLm5hdi10b3AtcGFydCB7XG4gIG1hcmdpbi1ib3R0b206IDcwcHg7XG59XG5cbi5wcm9maWxlLWxpbmsubWF0LWxpc3QtaXRlbS5tYXQtbGlzdC1pdGVtLXdpdGgtYXZhdGFyIHtcbiAgaGVpZ2h0OiA3MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG59Il19 */\"","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout'\nimport { Component, OnInit, ViewChild } from '@angular/core'\nimport { MatSidenav } from '@angular/material'\nimport { Router, RoutesRecognized } from '@angular/router'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nimport { NavCategory } from './app.interfaces'\nimport { DomainsService } from './pages/domains/domains.service'\nimport { ProfileService } from './pages/profile/profile.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  public constructor(\n    private breakpointObserver: BreakpointObserver,\n    private router: Router,\n    public profileService: ProfileService,\n    public domainsService: DomainsService,\n  ) {}\n\n  public title = 'DuckyPanel'\n  public navCategories: NavCategory[] = [\n    {\n      title: 'General',\n      items: [\n        {\n          name: 'Dashboard',\n          icon: 'dashboard',\n          routerLink: '/',\n        },\n      ],\n    },\n    {\n      title: 'Account management',\n      items: [\n        {\n          name: 'Domains',\n          icon: 'domain',\n          routerLink: '/domains',\n        },\n        {\n          name: 'Email Accounts',\n          icon: 'email',\n          routerLink: '/accounts',\n        },\n        {\n          name: 'Forwarders',\n          icon: 'send',\n          routerLink: '/forwarders/',\n        },\n      ],\n    },\n    {\n      title: 'Help',\n      items: [\n        {\n          name: 'DNS records',\n          icon: 'dns',\n          routerLink: '/dns',\n        },\n      ],\n    },\n  ]\n\n  @ViewChild('drawer', { static: true })\n  private drawer: MatSidenav\n  public isFullscreen: boolean\n\n  public ngOnInit(): void {\n    this.profileService.getUserInfo()\n    this.domainsService.getDomains()\n    this.router.events.subscribe((event): void => {\n      if (event instanceof RoutesRecognized && event.state.root.firstChild) {\n        this.isFullscreen = event.state.root.firstChild.data.isFullscreen ? true : false\n        this.title = event.state.root.firstChild.data.title ? event.state.root.firstChild.data.title : 'DuckyPanel'\n      }\n    })\n  }\n\n  public isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map((result): boolean => result.matches))\n\n  public closeDrawerConditional(): void {\n    this.isHandset$.subscribe((isHandset$): void => {\n      if (isHandset$) {\n        this.drawer.close()\n      }\n    })\n  }\n}\n","import { LayoutModule } from '@angular/cdk/layout'\nimport { HttpClientModule } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport {\n  MAT_SNACK_BAR_DEFAULT_OPTIONS,\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatOptionModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatToolbarModule,\n  MatTooltipModule,\n} from '@angular/material'\nimport { MatChipsModule } from '@angular/material/chips'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { TdLoadingMaskModule } from '@covalent/experimental/loading-mask'\nimport { EcoFabSpeedDialModule } from '@ecodev/fab-speed-dial'\nimport { ApiModule, Configuration, ConfigurationParameters } from 'ducky-api-client-angular'\nimport { MatProgressButtonsModule } from 'mat-progress-buttons'\n\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { AccountsComponent } from './pages/accounts/accounts.component'\nimport { AccountDialogComponent } from './pages/accounts/components/account-dialog/account-dialog.component'\nimport { DnsComponent } from './pages/dns/dns.component'\nimport { AddAliasDialogComponent } from './pages/domains/components/add-alias-dialog/add-alias-dialog.component'\nimport { AddDomainDialogComponent } from './pages/domains/components/add-domain-dialog/add-domain-dialog.component'\nimport {\n  DkimDialogComponent,\n  DkimDialogEntryComponent,\n} from './pages/domains/components/dkim-dialog/dkim-dialog.component'\nimport { DomainsComponent } from './pages/domains/domains.component'\nimport { ForwarderDialogComponent } from './pages/forwarders/components/forwarder-dialog/forwarder-dialog.component'\nimport { ForwardersComponent } from './pages/forwarders/forwarders.component'\nimport { LoginComponent } from './pages/login/login.component'\nimport { ProfileComponent } from './pages/profile/profile.component'\nimport { DialogComponent } from './shared/components/dialog/dialog.component'\nimport { ErrorSnackbarComponent } from './shared/components/error-snackbar/error-snackbar.component'\nimport { FabButtonComponent } from './shared/components/fab-button/fab-button.component'\n\n// TODO: take these values from a config file or envvar\nexport function apiConfigFactory(): Configuration {\n  const accessToken = localStorage.getItem('access_token')\n  const params: ConfigurationParameters = {\n    basePath: 'http://localhost:3000',\n    accessToken: accessToken,\n  }\n  return new Configuration(params)\n}\n@NgModule({\n  entryComponents: [\n    DialogComponent,\n    AccountDialogComponent,\n    AddDomainDialogComponent,\n    AddAliasDialogComponent,\n    ErrorSnackbarComponent,\n    ForwarderDialogComponent,\n    DkimDialogComponent,\n  ],\n  declarations: [\n    AppComponent,\n    DomainsComponent,\n    DialogComponent,\n    AccountsComponent,\n    FabButtonComponent,\n    AccountDialogComponent,\n    AddDomainDialogComponent,\n    AddAliasDialogComponent,\n    LoginComponent,\n    ErrorSnackbarComponent,\n    ForwardersComponent,\n    ForwarderDialogComponent,\n    DkimDialogComponent,\n    DkimDialogEntryComponent,\n    DnsComponent,\n    ProfileComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatTableModule,\n    MatCardModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatInputModule,\n    MatChipsModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    ApiModule.forRoot(apiConfigFactory),\n    MatProgressButtonsModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    EcoFabSpeedDialModule,\n    TdLoadingMaskModule,\n  ],\n  providers: [\n    {\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n      useValue: { duration: 5000 },\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export default \".mat-column-actions {\\n  -webkit-box-flex: 0;\\n          flex: 0 0 80px;\\n}\\n\\n.mat-column-actions.mat-header-cell {\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n}\\n\\n.mat-column-quotaUsedFormatted {\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: reverse;\\n          flex-direction: row-reverse;\\n  padding-right: 15px;\\n}\\n\\nmat-table {\\n  min-width: 650px;\\n}\\n\\n.account-table-card {\\n  overflow-x: scroll;\\n  scrollbar-width: none;\\n  -ms-overflow-style: none;\\n}\\n\\n.account-table-card::-webkit-scrollbar {\\n  width: 0;\\n  height: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWlyby9EZXYvRHVja3lQYW5lbC9zcmMvYXBwL3BhZ2VzL2FjY291bnRzL2FjY291bnRzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9hY2NvdW50cy9hY2NvdW50cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLG1CQUFBO1VBQUEsY0FBQTtBQ0FGOztBRElBO0VBQ0Usd0JBQUE7VUFBQSx1QkFBQTtBQ0RGOztBREtBO0VBQ0UsOEJBQUE7RUFBQSw4QkFBQTtVQUFBLDJCQUFBO0VBQ0EsbUJBQUE7QUNGRjs7QURNQTtFQUNFLGdCQUFBO0FDSEY7O0FETUE7RUFDRSxrQkFBQTtFQUNBLHFCQUFBO0VBQ0Esd0JBQUE7QUNIRjs7QURNQTtFQUNFLFFBQUE7RUFDQSxTQUFBO0FDSEYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50cy9hY2NvdW50cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEFsaWduIGFjdGlvbnMgY29sdW1uIHRvIHRoZSByaWdodFxuLm1hdC1jb2x1bW4tYWN0aW9ucyB7XG4gIGZsZXg6IDAgMCA4MHB4O1xufVxuXG4vLyBBbGlnbiBhY3Rpb25zIGNvbHVtbiBjZW50ZXJcbi5tYXQtY29sdW1uLWFjdGlvbnMubWF0LWhlYWRlci1jZWxsIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi8vIEFsaWduIHVzZWQgY29sdW1uIHRvIGJlIHJpZ2h0IG5leHQgdG8gcXVvdGEgY29sdW1uXG4ubWF0LWNvbHVtbi1xdW90YVVzZWRGb3JtYXR0ZWQge1xuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG4gIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG59XG5cbi8vIERvbid0IGxldCB0aGUgdGFibGUgZ2V0IHRvbyBuYXJyb3cgYW5kIGhpZGUgc2Nyb2xsYmFyXG5tYXQtdGFibGUge1xuICBtaW4td2lkdGg6IDY1MHB4O1xufVxuXG4uYWNjb3VudC10YWJsZS1jYXJkIHtcbiAgb3ZlcmZsb3cteDogc2Nyb2xsO1xuICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7XG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcbn1cblxuLmFjY291bnQtdGFibGUtY2FyZDo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xufVxuIiwiLm1hdC1jb2x1bW4tYWN0aW9ucyB7XG4gIGZsZXg6IDAgMCA4MHB4O1xufVxuXG4ubWF0LWNvbHVtbi1hY3Rpb25zLm1hdC1oZWFkZXItY2VsbCB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4ubWF0LWNvbHVtbi1xdW90YVVzZWRGb3JtYXR0ZWQge1xuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG4gIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG59XG5cbm1hdC10YWJsZSB7XG4gIG1pbi13aWR0aDogNjUwcHg7XG59XG5cbi5hY2NvdW50LXRhYmxlLWNhcmQge1xuICBvdmVyZmxvdy14OiBzY3JvbGw7XG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTtcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xufVxuXG4uYWNjb3VudC10YWJsZS1jYXJkOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDA7XG59Il19 */\"","import { HttpErrorResponse } from '@angular/common/http'\nimport { Component, OnInit, ViewChild } from '@angular/core'\nimport {\n  MatDialog,\n  MatDialogConfig,\n  MatDialogRef,\n  MatPaginator,\n  MatSnackBar,\n  MatSort,\n  MatTableDataSource,\n} from '@angular/material'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { AccountListItem, EmailAccountsService } from 'ducky-api-client-angular'\nimport { Subscription } from 'rxjs'\nimport { DialogComponent } from 'src/app/shared/components/dialog/dialog.component'\nimport { DialogConfig } from 'src/app/shared/components/dialog/dialog.interfaces'\nimport { ErrorSnackbarService } from 'src/app/shared/components/error-snackbar/error-snackbar.service'\nimport { formatBytes } from 'src/app/shared/functions/formatBytes.function'\n\nimport { AccountListItemFormatted } from './accounts.interfaces'\nimport { AccountDialogComponent } from './components/account-dialog/account-dialog.component'\n\n@Component({\n  selector: 'app-accounts',\n  templateUrl: './accounts.component.html',\n  styleUrls: ['./accounts.component.scss'],\n})\nexport class AccountsComponent implements OnInit {\n  public constructor(\n    public dialog: MatDialog,\n    private readonly accountsService: EmailAccountsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private snackBar: MatSnackBar,\n    private errorSnackbarService: ErrorSnackbarService,\n  ) {}\n\n  public displayedColumns = ['address', 'name', 'quotaUsedFormatted', 'quotaAllowedFormatted', 'actions']\n  public dataSource: MatTableDataSource<AccountListItemFormatted> = new MatTableDataSource()\n  public accountSubscription: Subscription\n\n  @ViewChild(MatSort, { static: false })\n  private set content(sort: MatSort) {\n    // Needed because of the ngif wrapper around the table\n    if (this.dataSource) {\n      this.dataSource.sort = sort\n    }\n  }\n\n  @ViewChild(MatPaginator, { static: true })\n  public paginator: MatPaginator\n\n  public ngOnInit(): void {\n    this.getAccounts()\n\n    this.dataSource.paginator = this.paginator\n\n    this.activatedRoute.params.subscribe((params): void => {\n      if (params['id']) {\n        this.accountDialog(params['id'])\n      }\n    })\n  }\n\n  public getAccounts(): void {\n    this.accountSubscription = this.accountsService.getAccounts().subscribe(\n      (accounts: AccountListItem[]): void => {\n        const accountsFormatted = accounts as AccountListItemFormatted[]\n\n        // Convert quota bytes to human readable\n        for (const accountFormatted of accountsFormatted) {\n          accountFormatted.quotaAllowedFormatted = formatBytes(accountFormatted.quota.allowed)\n          accountFormatted.quotaUsedFormatted = formatBytes(accountFormatted.quota.used)\n        }\n\n        this.dataSource.data = accountsFormatted\n        this.dataSource.sortingDataAccessor = (item, property): string | number => {\n          // Sort the number of bytes instead of the formatted string\n          switch (property) {\n            case 'quotaUsedFormatted':\n              return item.quota.used\n            case 'quotaAllowedFormatted':\n              return item.quota.allowed\n            default:\n              return item[property]\n          }\n        }\n      },\n      error => {\n        this.errorSnackbarService.open(error)\n      },\n    )\n  }\n\n  public applyFilter(filterValue: string): void {\n    this.dataSource.filter = filterValue.trim().toLowerCase()\n  }\n\n  public accountDialog(id?: string): void {\n    const dialogConfig: MatDialogConfig = {}\n    if (id) {\n      dialogConfig.data = { id: id }\n    }\n    const dialog = this.dialog.open(AccountDialogComponent, dialogConfig)\n    dialog.afterClosed().subscribe((result): void => {\n      this.router.navigateByUrl('/accounts/')\n      if (result) {\n        this.getAccounts()\n      }\n    })\n  }\n\n  public removeConfirmDialog(accountId: string, address?: string): void {\n    const dialogConfig: DialogConfig = {\n      data: {\n        title: `Remove ${address || accountId}`,\n        text: 'Are you sure? This will delete all messages in this account.',\n        buttons: [\n          {\n            options: {\n              active: false,\n              text: 'NO',\n            },\n          },\n          {\n            options: {\n              active: false,\n              text: 'YES',\n              buttonColor: 'warn',\n              spinnerSize: 18,\n              mode: 'indeterminate',\n            },\n            callback: (dialogRef: MatDialogRef<DialogComponent>): void => {\n              dialogRef.disableClose = true\n              dialogConfig.data.buttons[0].options.disabled = true\n              dialogConfig.data.buttons[1].options.active = true\n\n              this.accountsService.deleteAccount(accountId).subscribe(\n                (): void => {\n                  dialogRef.close()\n                  this.snackBar.open(`${address || accountId} has been removed`, undefined, {\n                    panelClass: 'success-snackbar',\n                  })\n                  this.getAccounts()\n                },\n                (error: HttpErrorResponse): void => {\n                  dialogRef.disableClose = false\n                  dialogConfig.data.buttons[0].options.disabled = false\n                  dialogConfig.data.buttons[1].options.active = false\n                  this.errorSnackbarService.open(error)\n                },\n              )\n            },\n          },\n        ],\n      },\n    }\n    this.dialog.open(DialogComponent, dialogConfig)\n  }\n}\n","export default \".row-container > mat-form-field {\\n  min-width: 0;\\n  width: 100%;\\n}\\n\\n.user-input-right {\\n  text-align: right;\\n}\\n\\n.at-symbol {\\n  padding-bottom: 1.34375em;\\n}\\n\\n.loader-container {\\n  width: 80vw;\\n  margin: 0 -24px;\\n  padding: 0 24px;\\n  box-sizing: border-box;\\n  max-width: 707.81px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWlyby9EZXYvRHVja3lQYW5lbC9zcmMvYXBwL3BhZ2VzL2FjY291bnRzL2NvbXBvbmVudHMvYWNjb3VudC1kaWFsb2cvYWNjb3VudC1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2FjY291bnRzL2NvbXBvbmVudHMvYWNjb3VudC1kaWFsb2cvYWNjb3VudC1kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0VBQ0EsV0FBQTtBQ0NGOztBREVBO0VBQ0UsaUJBQUE7QUNDRjs7QURFQTtFQUNFLHlCQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50cy9jb21wb25lbnRzL2FjY291bnQtZGlhbG9nL2FjY291bnQtZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdy1jb250YWluZXIgPiBtYXQtZm9ybS1maWVsZCB7XG4gIG1pbi13aWR0aDogMDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi51c2VyLWlucHV0LXJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5hdC1zeW1ib2wge1xuICBwYWRkaW5nLWJvdHRvbTogMS4zNDM3NWVtO1xufVxuXG4ubG9hZGVyLWNvbnRhaW5lciB7XG4gIHdpZHRoOiA4MHZ3O1xuICBtYXJnaW46IDAgLTI0cHg7XG4gIHBhZGRpbmc6IDAgMjRweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbWF4LXdpZHRoOiA3MDcuODFweDsgLy8gV2lkdGggb2YgdGhlIGVudGlyZSBmb3JtLiBTb3JyeSBmb3IgdGhlIG1hZ2ljIG51bWJlciwgSSBjb3VsZG4ndCBmaWd1cmUgb3V0IGhvdyB0byBnZXQgdG8gdGhpcyB2YWx1ZSBvdGhlcndpc2Vcbn0iLCIucm93LWNvbnRhaW5lciA+IG1hdC1mb3JtLWZpZWxkIHtcbiAgbWluLXdpZHRoOiAwO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnVzZXItaW5wdXQtcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmF0LXN5bWJvbCB7XG4gIHBhZGRpbmctYm90dG9tOiAxLjM0Mzc1ZW07XG59XG5cbi5sb2FkZXItY29udGFpbmVyIHtcbiAgd2lkdGg6IDgwdnc7XG4gIG1hcmdpbjogMCAtMjRweDtcbiAgcGFkZGluZzogMCAyNHB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXgtd2lkdGg6IDcwNy44MXB4O1xufSJdfQ== */\"","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Component, Inject, OnInit } from '@angular/core'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { MAT_DIALOG_DATA, MatDialogRef, MatSnackBar } from '@angular/material'\nimport { AccountDetails, CreateAccountDto, EmailAccountsService, UpdateAccountDto } from 'ducky-api-client-angular'\nimport { MatProgressButtonOptions } from 'mat-progress-buttons'\nimport { Observable, Subscription } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { DomainsService } from 'src/app/pages/domains/domains.service'\nimport { ErrorSnackbarService } from 'src/app/shared/components/error-snackbar/error-snackbar.service'\nimport { AddressUsernameValidator } from 'src/app/shared/validators/address-username-validator.directive'\n\n@Component({\n  selector: 'app-account-dialog',\n  templateUrl: './account-dialog.component.html',\n  styleUrls: ['./account-dialog.component.scss'],\n})\nexport class AccountDialogComponent implements OnInit {\n  public constructor(\n    public dialogRef: MatDialogRef<AccountDialogComponent>,\n    private breakpointObserver: BreakpointObserver,\n    public readonly domainsService: DomainsService,\n    private readonly emailAccountsService: EmailAccountsService,\n    private snackBar: MatSnackBar,\n    private errorSnackbarService: ErrorSnackbarService,\n    @Inject(MAT_DIALOG_DATA) public data,\n  ) {}\n\n  public isModifyDialog: boolean\n  public accountDetails: AccountDetails\n  public accountDetailsSubscription: Subscription\n  public math: Math = Math\n\n  public isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map((result): boolean => result.matches))\n\n  public accountForm: FormGroup = new FormGroup({\n    name: new FormControl(null),\n    spamLevel: new FormControl(50, [Validators.min(0), Validators.max(100)]),\n    disabledScopes: new FormControl(null),\n    addressUser: new FormControl(null, AddressUsernameValidator()),\n    domain: new FormControl(null),\n    password: new FormControl(null, Validators.minLength(8)),\n    quota: new FormControl(null, Validators.min(0)),\n    sendLimit: new FormControl(null, [Validators.min(1), Validators.max(300)]),\n    receiveLimit: new FormControl(null, Validators.min(0)),\n    forwardLimit: new FormControl(null, [Validators.min(1), Validators.max(200)]),\n  })\n\n  public saveButtonConfig: MatProgressButtonOptions = {\n    active: false,\n    text: 'SAVE',\n    disabled: true,\n    raised: true,\n    buttonColor: 'primary',\n    spinnerColor: 'accent',\n    spinnerSize: 18,\n    mode: 'indeterminate',\n  }\n\n  public cancelButtonConfig: MatProgressButtonOptions = {\n    active: false,\n    type: 'button',\n    text: 'CANCEL',\n  }\n\n  public ngOnInit(): void {\n    this.accountForm.valueChanges.subscribe((): void => {\n      this.saveButtonConfig.disabled = this.accountForm.invalid || this.accountForm.pristine\n    })\n\n    // If id was passed this is a modify dialog, otherwise it is a create dialog\n    if (this.data) {\n      this.isModifyDialog = true\n      this.getAccount()\n    }\n  }\n\n  public forceCheckForm(): void {\n    if (this.accountForm.invalid) {\n      this.accountForm.markAllAsTouched()\n    }\n  }\n\n  public getAccount(): void {\n    this.accountForm.controls['addressUser'].disable()\n    this.accountForm.controls['domain'].disable()\n\n    this.accountDetailsSubscription = this.emailAccountsService.getAccountDetails(this.data.id).subscribe(\n      (account): void => {\n        this.accountDetails = account\n        // Split address to name and domain for split input\n        const addressUser = this.accountDetails.address.substring(0, this.accountDetails.address.lastIndexOf('@'))\n\n        this.accountForm.setValue({\n          name: account.name,\n          spamLevel: account.spamLevel,\n          disabledScopes: account.disabledScopes,\n          addressUser: addressUser,\n          domain: this.accountDetails.address.substring(this.accountDetails.address.lastIndexOf('@') + 1),\n          password: null,\n          quota: Math.round(account.limits.quota.allowed / 1024 ** 2),\n          sendLimit: account.limits.send.allowed,\n          receiveLimit: account.limits.receive.allowed,\n          forwardLimit: account.limits.forward.allowed,\n        })\n      },\n      (error: HttpErrorResponse): void => {\n        this.dialogRef.close()\n        this.errorSnackbarService.open(error)\n      },\n    )\n  }\n\n  public updateAccount(): void {\n    this.dialogRef.disableClose = true\n    this.cancelButtonConfig.disabled = true\n    this.saveButtonConfig.active = true\n\n    const dirtyValues: any = {}\n    for (const key in this.accountForm.controls) {\n      const value = this.accountForm.controls[key].value\n      if (this.accountForm.controls[key].dirty && value !== null && value !== '') {\n        dirtyValues[key] = value\n      }\n    }\n\n    const account: CreateAccountDto | UpdateAccountDto = {\n      name: dirtyValues.name,\n      spamLevel: dirtyValues.spamLevel,\n      disabledScopes: dirtyValues.disabledScopes,\n      address: dirtyValues.addressUser ? `${dirtyValues.addressUser}@${dirtyValues.domain}` : undefined,\n      password: dirtyValues.password,\n      limits: {\n        quota: dirtyValues.quota ? dirtyValues.quota * 1024 ** 2 : undefined,\n        send: dirtyValues.sendLimit,\n        receive: dirtyValues.receiveLimit,\n        forward: dirtyValues.forwardLimit,\n      },\n    }\n\n    const onError = (error: HttpErrorResponse): void => {\n      this.dialogRef.disableClose = false\n      this.cancelButtonConfig.disabled = false\n      this.saveButtonConfig.active = false\n      this.errorSnackbarService.open(error)\n    }\n\n    if (this.isModifyDialog) {\n      const address = `${this.accountForm.controls['addressUser'].value}@${this.accountForm.controls['domain'].value}`\n      delete account.address\n      this.emailAccountsService.updateAccount(this.data.id, account).subscribe((): void => {\n        this.snackBar.open(`${address} successfully updated`, undefined, {\n          panelClass: 'success-snackbar',\n        })\n        this.dialogRef.close(true)\n      }, onError)\n    } else {\n      this.emailAccountsService.createAccount(account).subscribe((): void => {\n        this.snackBar.open(`${account.address} successfully added`, undefined, {\n          panelClass: 'success-snackbar',\n        })\n        this.dialogRef.close(true)\n      }, onError)\n    }\n  }\n}\n","export default \".domain-field {\\n  width: 100%;\\n}\\n\\n.dns-card-title {\\n  margin-bottom: 0;\\n}\\n\\n.table-title {\\n  margin-bottom: 0;\\n}\\n\\n.dkim-content {\\n  word-break: break-all;\\n  padding-top: 15px;\\n  padding-bottom: 15px;\\n}\\n\\n.success-icon {\\n  color: green;\\n}\\n\\n.error-icon {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWlyby9EZXYvRHVja3lQYW5lbC9zcmMvYXBwL3BhZ2VzL2Rucy9kbnMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2Rucy9kbnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSxnQkFBQTtBQ0NGOztBREVBO0VBQ0UsZ0JBQUE7QUNDRjs7QURFQTtFQUNFLHFCQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtBQ0NGOztBREVBO0VBQ0UsWUFBQTtBQ0NGOztBREVBO0VBQ0UsVUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZG5zL2Rucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kb21haW4tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmRucy1jYXJkLXRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLnRhYmxlLXRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmRraW0tY29udGVudCB7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbiAgcGFkZGluZy10b3A6IDE1cHg7XG4gIHBhZGRpbmctYm90dG9tOiAxNXB4O1xufVxuXG4uc3VjY2Vzcy1pY29uIHtcbiAgY29sb3I6IGdyZWVuO1xufVxuXG4uZXJyb3ItaWNvbiB7XG4gIGNvbG9yOiByZWQ7XG59IiwiLmRvbWFpbi1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZG5zLWNhcmQtdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4udGFibGUtdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uZGtpbS1jb250ZW50IHtcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xuICBwYWRkaW5nLXRvcDogMTVweDtcbiAgcGFkZGluZy1ib3R0b206IDE1cHg7XG59XG5cbi5zdWNjZXNzLWljb24ge1xuICBjb2xvcjogZ3JlZW47XG59XG5cbi5lcnJvci1pY29uIHtcbiAgY29sb3I6IHJlZDtcbn0iXX0= */\"","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout'\nimport { Component, OnInit } from '@angular/core'\nimport { FormControl, FormGroup } from '@angular/forms'\nimport { MatTableDataSource } from '@angular/material'\nimport {\n  DnsCheck,\n  DnsCheckError,\n  DnsCheckMxRecord,\n  DomainsService as ApiDomainsService,\n} from 'ducky-api-client-angular'\nimport { Observable, Subscription } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { ErrorSnackbarService } from 'src/app/shared/components/error-snackbar/error-snackbar.service'\n\nimport { DomainsService } from '../domains/domains.service'\nimport { DnsCheckTxtRecord } from './dns.interfaces'\n\n@Component({\n  selector: 'app-dns',\n  templateUrl: './dns.component.html',\n  styleUrls: ['./dns.component.scss'],\n})\nexport class DnsComponent implements OnInit {\n  public constructor(\n    private breakpointObserver: BreakpointObserver,\n    private apiDomainsService: ApiDomainsService,\n    public domainsService: DomainsService,\n    private errorSnackbarService: ErrorSnackbarService,\n  ) {}\n\n  public selectedDomain: string\n  public dnsCheck: DnsCheck\n  public dnsCheckSubscription: Subscription\n  public correctMxDataSource: MatTableDataSource<DnsCheckMxRecord> = new MatTableDataSource()\n  public correctMxDisplayedColumns = ['name', 'server', 'priority']\n  public correctTxtDataSource: MatTableDataSource<DnsCheckTxtRecord> = new MatTableDataSource()\n  public correctTxtDisplayedColumns = ['name', 'content']\n  public errorDataSource: MatTableDataSource<DnsCheckError> = new MatTableDataSource()\n  public errorDisplayedColumns = ['type', 'message']\n\n  public isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map((result): boolean => result.matches))\n\n  public domainForm: FormGroup = new FormGroup({\n    domain: new FormControl(null),\n  })\n\n  public ngOnInit(): void {\n    this.domainForm.controls['domain'].valueChanges.subscribe((value): void => {\n      this.selectedDomain = value\n      this.checkDNS(value)\n    })\n  }\n\n  public checkDNS(domain: string): void {\n    this.dnsCheckSubscription = this.apiDomainsService.checkDNS(domain).subscribe(\n      (dnsCheck): void => {\n        this.dnsCheck = dnsCheck\n        this.errorDataSource.data = dnsCheck.errors\n        this.correctMxDataSource.data = dnsCheck.correctValues.mx\n        this.correctTxtDataSource.data = []\n        this.correctTxtDataSource.data.push({\n          content: dnsCheck.correctValues.spf,\n        })\n        if (dnsCheck.correctValues.dkim) {\n          this.correctTxtDataSource.data.push({\n            content: dnsCheck.correctValues.dkim.value,\n            isDkim: true,\n          })\n        }\n      },\n      error => {\n        this.errorSnackbarService.open(error)\n      },\n    )\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2RvbWFpbnMvY29tcG9uZW50cy9hZGQtYWxpYXMtZGlhbG9nL2FkZC1hbGlhcy1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import { HttpErrorResponse } from '@angular/common/http'\nimport { Component, Inject, OnInit } from '@angular/core'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { MAT_DIALOG_DATA, MatDialogRef, MatSnackBar } from '@angular/material'\nimport { DomainsService as ApiDomainsService } from 'ducky-api-client-angular'\nimport { MatProgressButtonOptions } from 'mat-progress-buttons'\nimport { ErrorSnackbarService } from 'src/app/shared/components/error-snackbar/error-snackbar.service'\n\nimport { DomainsService } from '../../domains.service'\n\n@Component({\n  selector: 'app-add-alias-dialog',\n  templateUrl: './add-alias-dialog.component.html',\n  styleUrls: ['./add-alias-dialog.component.scss'],\n})\nexport class AddAliasDialogComponent implements OnInit {\n  public constructor(\n    public dialogRef: MatDialogRef<AddAliasDialogComponent>,\n    private readonly apiDomainsService: ApiDomainsService,\n    public domainsService: DomainsService,\n    private snackBar: MatSnackBar,\n    private errorSnackbarService: ErrorSnackbarService,\n    @Inject(MAT_DIALOG_DATA) public data,\n  ) {}\n  public cancelButtonConfig: MatProgressButtonOptions = {\n    active: false,\n    type: 'button',\n    text: 'CANCEL',\n  }\n  public addButtonConfig: MatProgressButtonOptions = {\n    active: false,\n    disabled: true,\n    text: 'ADD',\n    raised: true,\n    buttonColor: 'primary',\n    spinnerColor: 'accent',\n    spinnerSize: 18,\n    mode: 'indeterminate',\n  }\n  public aliasForm = new FormGroup({\n    existingDomain: new FormControl(null),\n    aliasDomain: new FormControl(\n      '',\n      Validators.pattern(new RegExp('(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\\\.)+[a-zA-Z]{2,63}$)')),\n    ),\n  })\n\n  public ngOnInit(): void {\n    this.aliasForm.valueChanges.subscribe((): void => {\n      if (this.domainsService.domainsSubscription.closed) {\n        this.addButtonConfig.disabled = this.aliasForm.invalid\n      }\n    })\n  }\n\n  public addAlias(): void {\n    this.dialogRef.disableClose = true\n    this.cancelButtonConfig.disabled = true\n    this.addButtonConfig.active = true\n\n    this.apiDomainsService\n      .addAlias(this.aliasForm.controls['existingDomain'].value, {\n        domain: this.aliasForm.controls['aliasDomain'].value,\n      })\n      .subscribe(\n        (): void => {\n          this.dialogRef.close(true)\n          this.snackBar.open(`${this.aliasForm.controls['aliasDomain'].value} successfully added`, undefined, {\n            panelClass: 'success-snackbar',\n          })\n        },\n        (error: HttpErrorResponse): void => {\n          this.dialogRef.disableClose = false\n          this.cancelButtonConfig.disabled = false\n          this.addButtonConfig.active = false\n          this.errorSnackbarService.open(error)\n        },\n      )\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2RvbWFpbnMvY29tcG9uZW50cy9hZGQtZG9tYWluLWRpYWxvZy9hZGQtZG9tYWluLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { HttpErrorResponse } from '@angular/common/http'\nimport { Component, Inject, OnInit } from '@angular/core'\nimport { FormControl, Validators } from '@angular/forms'\nimport { MAT_DIALOG_DATA, MatDialogRef, MatSnackBar } from '@angular/material'\nimport { DomainsService } from 'ducky-api-client-angular'\nimport { MatProgressButtonOptions } from 'mat-progress-buttons'\nimport { ErrorSnackbarService } from 'src/app/shared/components/error-snackbar/error-snackbar.service'\n\n@Component({\n  selector: 'app-add-domain-dialog',\n  templateUrl: './add-domain-dialog.component.html',\n  styleUrls: ['./add-domain-dialog.component.scss'],\n})\nexport class AddDomainDialogComponent implements OnInit {\n  public constructor(\n    public dialogRef: MatDialogRef<AddDomainDialogComponent>,\n    private readonly domainsService: DomainsService,\n    private snackBar: MatSnackBar,\n    private errorSnackbarService: ErrorSnackbarService,\n    @Inject(MAT_DIALOG_DATA) public data,\n  ) {}\n\n  public cancelButtonConfig: MatProgressButtonOptions = {\n    active: false,\n    type: 'button',\n    text: 'CANCEL',\n  }\n  public addButtonConfig: MatProgressButtonOptions = {\n    active: false,\n    disabled: true,\n    text: 'ADD',\n    raised: true,\n    buttonColor: 'primary',\n    spinnerColor: 'accent',\n    spinnerSize: 18,\n    mode: 'indeterminate',\n  }\n  public domainInput = new FormControl(\n    '',\n    Validators.pattern(new RegExp('(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\\\.)+[a-zA-Z]{2,63}$)')), // valid fqdn\n  )\n\n  public ngOnInit(): void {\n    this.domainInput.valueChanges.subscribe((): void => {\n      this.addButtonConfig.disabled = this.domainInput.invalid\n    })\n  }\n\n  public addDomain(): void {\n    this.dialogRef.disableClose = true\n    this.cancelButtonConfig.disabled = true\n    this.addButtonConfig.active = true\n\n    this.domainsService.addDomain({ domain: this.domainInput.value }).subscribe(\n      (): void => {\n        this.dialogRef.close(true)\n        this.snackBar.open(`${this.domainInput.value} successfully added`, undefined, {\n          panelClass: 'success-snackbar',\n        })\n      },\n      (error: HttpErrorResponse): void => {\n        this.dialogRef.disableClose = false\n        this.cancelButtonConfig.disabled = false\n        this.addButtonConfig.active = false\n        this.errorSnackbarService.open(error)\n      },\n    )\n  }\n}\n","export default \".text-area,\\n.loader {\\n  width: 400px;\\n  max-width: 100%;\\n}\\n.text-area textarea,\\n.loader textarea {\\n  max-height: 40vh;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWlyby9EZXYvRHVja3lQYW5lbC9zcmMvYXBwL3BhZ2VzL2RvbWFpbnMvY29tcG9uZW50cy9ka2ltLWRpYWxvZy9ka2ltLWRpYWxvZy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvZG9tYWlucy9jb21wb25lbnRzL2RraW0tZGlhbG9nL2RraW0tZGlhbG9nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLFlBQUE7RUFDQSxlQUFBO0FDQ0Y7QURDRTs7RUFDRSxnQkFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZG9tYWlucy9jb21wb25lbnRzL2RraW0tZGlhbG9nL2RraW0tZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRleHQtYXJlYSxcbi5sb2FkZXIge1xuICB3aWR0aDogNDAwcHg7XG4gIG1heC13aWR0aDogMTAwJTtcblxuICB0ZXh0YXJlYSB7XG4gICAgbWF4LWhlaWdodDogNDB2aDtcbiAgfVxufVxuIiwiLnRleHQtYXJlYSxcbi5sb2FkZXIge1xuICB3aWR0aDogNDAwcHg7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbi50ZXh0LWFyZWEgdGV4dGFyZWEsXG4ubG9hZGVyIHRleHRhcmVhIHtcbiAgbWF4LWhlaWdodDogNDB2aDtcbn0iXX0= */\"","import { HttpErrorResponse } from '@angular/common/http'\nimport { Component, Inject, OnInit } from '@angular/core'\nimport { FormControl, FormGroup } from '@angular/forms'\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatSnackBar } from '@angular/material'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { AddDkimDto, DkimService } from 'ducky-api-client-angular'\nimport { MatProgressButtonOptions } from 'mat-progress-buttons'\nimport { Subscription } from 'rxjs'\nimport { AccountDialogComponent } from 'src/app/pages/accounts/components/account-dialog/account-dialog.component'\nimport { DialogComponent } from 'src/app/shared/components/dialog/dialog.component'\nimport { DialogConfig } from 'src/app/shared/components/dialog/dialog.interfaces'\nimport { ErrorSnackbarService } from 'src/app/shared/components/error-snackbar/error-snackbar.service'\n\nimport { DomainsService } from '../../domains.service'\n\n@Component({\n  selector: 'app-dkim-dialog',\n  templateUrl: './dkim-dialog.component.html',\n  styleUrls: ['./dkim-dialog.component.scss'],\n})\nexport class DkimDialogComponent implements OnInit {\n  public constructor(\n    public dialogRef: MatDialogRef<AccountDialogComponent>,\n    public dialog: MatDialog,\n    private dkimService: DkimService,\n    private snackBar: MatSnackBar,\n    private errorSnackbarService: ErrorSnackbarService,\n    @Inject(MAT_DIALOG_DATA)\n    public data,\n  ) {}\n  public isModifyDialog: boolean\n  public dkimForm: FormGroup = new FormGroup({\n    selector: new FormControl(null),\n    privateKey: new FormControl(null),\n  })\n  public dkimKeySubscription: Subscription\n\n  public saveButtonConfig: MatProgressButtonOptions = {\n    active: false,\n    text: 'SAVE',\n    disabled: true,\n    raised: true,\n    buttonColor: 'primary',\n    spinnerColor: 'accent',\n    spinnerSize: 18,\n    mode: 'indeterminate',\n  }\n\n  public disableButtonConfig: MatProgressButtonOptions = {\n    active: false,\n    type: 'button',\n    text: 'DISABLE',\n    buttonColor: 'warn',\n    spinnerColor: 'accent',\n    spinnerSize: 18,\n    mode: 'indeterminate',\n  }\n\n  public cancelButtonConfig: MatProgressButtonOptions = {\n    active: false,\n    type: 'button',\n    text: 'CANCEL',\n  }\n\n  public ngOnInit(): void {\n    this.dkimForm.valueChanges.subscribe((): void => {\n      if (!this.isModifyDialog || this.dkimKeySubscription.closed) {\n        this.saveButtonConfig.disabled = this.dkimForm.invalid || this.dkimForm.pristine\n      }\n    })\n\n    if (this.data.edit) {\n      this.getDkim()\n      this.isModifyDialog = true\n    }\n  }\n\n  public getDkim(): void {\n    this.dkimKeySubscription = this.dkimService.getDkim(this.data.domain).subscribe(\n      (dkimKey): void => {\n        this.dkimForm.setValue({\n          selector: dkimKey.selector,\n          privateKey: null,\n        })\n      },\n      (error: HttpErrorResponse): void => {\n        this.dialogRef.close()\n        this.errorSnackbarService.open(error)\n      },\n    )\n  }\n\n  public updateDkim(): void {\n    this.dialogRef.disableClose = true\n    this.cancelButtonConfig.disabled = true\n    this.saveButtonConfig.active = true\n\n    const dirtyValues: any = {}\n    for (const key in this.dkimForm.controls) {\n      const value = this.dkimForm.controls[key].value\n      if (this.dkimForm.controls[key].dirty && value !== null && value !== '') {\n        dirtyValues[key] = value\n      }\n    }\n\n    const dkimKey: AddDkimDto = {\n      selector: dirtyValues.selector,\n      privateKey: dirtyValues.privateKey,\n    }\n\n    this.dkimService.updateDkim(this.data.domain, dkimKey).subscribe(\n      (): void => {\n        this.dialogRef.close(true)\n        this.snackBar.open(`DKIM for ${this.data.domain} ${this.isModifyDialog ? 'updated' : 'enabled'}`, undefined, {\n          panelClass: 'success-snackbar',\n        })\n      },\n      (error: HttpErrorResponse): void => {\n        this.dialogRef.disableClose = false\n        this.cancelButtonConfig.disabled = false\n        this.saveButtonConfig.active = false\n        this.errorSnackbarService.open(error)\n      },\n    )\n  }\n\n  public forceCheckForm(): void {\n    if (this.dkimForm.invalid) {\n      this.dkimForm.markAllAsTouched()\n    }\n  }\n\n  public disableDialog(): void {\n    const dialogConfig: DialogConfig = {\n      data: {\n        title: `Disable DKIM for ${this.data.domain}`,\n        text: 'Are you sure? This will also delete the private key from the server.',\n        buttons: [\n          {\n            options: {\n              active: false,\n              text: 'NO',\n            },\n          },\n          {\n            options: {\n              active: false,\n              text: 'YES',\n              buttonColor: 'warn',\n              spinnerSize: 18,\n              mode: 'indeterminate',\n            },\n            callback: (dialogRef: MatDialogRef<DialogComponent>): void => {\n              dialogRef.disableClose = true\n              dialogConfig.data.buttons[0].options.disabled = true\n              dialogConfig.data.buttons[1].options.active = true\n\n              this.dkimService.deleteDkim(this.data.domain).subscribe(\n                (): void => {\n                  dialogRef.close()\n                  this.snackBar.open(`DKIM for ${this.data.domain} has been disabled`, undefined, {\n                    panelClass: 'success-snackbar',\n                  })\n                  this.dialogRef.close(true)\n                },\n                (error: HttpErrorResponse): void => {\n                  dialogRef.disableClose = false\n                  dialogConfig.data.buttons[0].options.disabled = false\n                  dialogConfig.data.buttons[1].options.active = false\n                  this.errorSnackbarService.open(error)\n                },\n              )\n            },\n          },\n        ],\n      },\n    }\n    this.dialog.open(DialogComponent, dialogConfig)\n  }\n}\n\n@Component({\n  template: '',\n})\nexport class DkimDialogEntryComponent implements OnInit {\n  public constructor(\n    public dialog: MatDialog,\n    private router: Router,\n    private route: ActivatedRoute,\n    public domainService: DomainsService,\n  ) {}\n  public ngOnInit(): void {\n    this.route.params.subscribe((params): void => {\n      this.dkimDialog(params['domain'], params['action'] === 'edit')\n    })\n  }\n\n  public dkimDialog(domain: string, edit = false): void {\n    const dialog = this.dialog.open(DkimDialogComponent, {\n      data: {\n        domain: domain,\n        edit: edit,\n      },\n    })\n    dialog.afterClosed().subscribe((result): void => {\n      if (result) {\n        this.domainService.getDomains()\n        this.router.navigateByUrl('/domains')\n      } else {\n        this.router.navigateByUrl('/domains')\n      }\n    })\n  }\n}\n","export default \".mat-column-actions {\\n  -webkit-box-flex: 0;\\n          flex: 0 0 80px;\\n}\\n\\n.mat-column-actions.mat-header-cell {\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n}\\n\\n.grayed-out {\\n  color: #cfcfcf;\\n}\\n\\n.overlap-icon {\\n  margin-left: -24px;\\n}\\n\\neco-fab-speed-dial {\\n  position: fixed;\\n  right: 30px;\\n  bottom: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWlyby9EZXYvRHVja3lQYW5lbC9zcmMvYXBwL3BhZ2VzL2RvbWFpbnMvZG9tYWlucy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvZG9tYWlucy9kb21haW5zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsbUJBQUE7VUFBQSxjQUFBO0FDQUY7O0FESUE7RUFDRSx3QkFBQTtVQUFBLHVCQUFBO0FDREY7O0FESUE7RUFDRSxjQUFBO0FDREY7O0FESUE7RUFDRSxrQkFBQTtBQ0RGOztBRElBO0VBQ0UsZUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0FDREYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9kb21haW5zL2RvbWFpbnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBbGlnbiBhY3Rpb25zIGNvbGx1bW4gdG8gdGhlIHJpZ2h0XG4ubWF0LWNvbHVtbi1hY3Rpb25zIHtcbiAgZmxleDogMCAwIDgwcHhcbn1cblxuLy8gQWxpZ24gYWN0aW9ucyBjb2x1bW4gY2VudGVyXG4ubWF0LWNvbHVtbi1hY3Rpb25zLm1hdC1oZWFkZXItY2VsbCB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uZ3JheWVkLW91dCB7XG4gIGNvbG9yOiAjY2ZjZmNmO1xufVxuXG4ub3ZlcmxhcC1pY29uIHtcbiAgbWFyZ2luLWxlZnQ6IC0yNHB4XG59XG5cbmVjby1mYWItc3BlZWQtZGlhbCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcmlnaHQ6IDMwcHg7XG4gIGJvdHRvbTogMzBweDtcbn0iLCIubWF0LWNvbHVtbi1hY3Rpb25zIHtcbiAgZmxleDogMCAwIDgwcHg7XG59XG5cbi5tYXQtY29sdW1uLWFjdGlvbnMubWF0LWhlYWRlci1jZWxsIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5ncmF5ZWQtb3V0IHtcbiAgY29sb3I6ICNjZmNmY2Y7XG59XG5cbi5vdmVybGFwLWljb24ge1xuICBtYXJnaW4tbGVmdDogLTI0cHg7XG59XG5cbmVjby1mYWItc3BlZWQtZGlhbCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcmlnaHQ6IDMwcHg7XG4gIGJvdHRvbTogMzBweDtcbn0iXX0= */\"","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Component, OnInit } from '@angular/core'\nimport { MatDialog, MatDialogRef, MatSnackBar, MatTableDataSource } from '@angular/material'\nimport { Router } from '@angular/router'\nimport { Domain, DomainsService as ApiDomainsService } from 'ducky-api-client-angular'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { DialogComponent } from 'src/app/shared/components/dialog/dialog.component'\nimport { DialogConfig } from 'src/app/shared/components/dialog/dialog.interfaces'\nimport { ErrorSnackbarService } from 'src/app/shared/components/error-snackbar/error-snackbar.service'\n\nimport { AddAliasDialogComponent } from './components/add-alias-dialog/add-alias-dialog.component'\nimport { AddDomainDialogComponent } from './components/add-domain-dialog/add-domain-dialog.component'\nimport { DomainsService } from './domains.service'\n\n@Component({\n  selector: 'app-domains',\n  templateUrl: './domains.component.html',\n  styleUrls: ['./domains.component.scss'],\n})\nexport class DomainsComponent implements OnInit {\n  public constructor(\n    private breakpointObserver: BreakpointObserver,\n    public dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private errorSnackbarService: ErrorSnackbarService,\n    private readonly apiDomainsService: ApiDomainsService,\n    public domainsService: DomainsService,\n    private router: Router,\n  ) {}\n\n  public displayedColumns = ['domain', 'actions']\n  public dataSource: MatTableDataSource<Domain>\n  public isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map((result): boolean => result.matches))\n\n  public ngOnInit(): void {\n    this.domainsService.domainsSubscription.add(() => {\n      this.dataSource = new MatTableDataSource(this.domainsService.domainsAndAliases)\n    })\n    this.domainsService.domainsAndAliasesSubject.subscribe(domainsAndAliases => {\n      this.dataSource.data = domainsAndAliases\n    })\n  }\n\n  public addDomainDialog(): void {\n    const dialog = this.dialog.open(AddDomainDialogComponent)\n    dialog.afterClosed().subscribe((result): void => {\n      if (result) {\n        this.domainsService.getDomains()\n      }\n    })\n  }\n\n  public addAliasDialog(): void {\n    const dialog = this.dialog.open(AddAliasDialogComponent)\n    dialog.afterClosed().subscribe((result): void => {\n      if (result) {\n        this.domainsService.getDomains()\n      }\n    })\n  }\n\n  public removeDomainConfirmDialog(domain: string): void {\n    const dialogConfig: DialogConfig = {\n      data: {\n        title: `Remove ${domain}`,\n        text: 'Are you sure? This will also remove accounts associated with this domain.',\n        buttons: [\n          {\n            options: {\n              active: false,\n              text: 'NO',\n            },\n          },\n          {\n            options: {\n              active: false,\n              text: 'YES',\n              buttonColor: 'warn',\n              spinnerSize: 18,\n              mode: 'indeterminate',\n            },\n            callback: (dialogRef: MatDialogRef<DialogComponent>): void => {\n              dialogRef.disableClose = true\n              dialogConfig.data.buttons[0].options.disabled = true\n              dialogConfig.data.buttons[1].options.active = true\n\n              this.apiDomainsService.deleteDomain(domain).subscribe(\n                (): void => {\n                  dialogRef.close()\n                  this.snackBar.open(`${domain} has been removed`, undefined, { panelClass: 'success-snackbar' })\n                  this.domainsService.getDomains()\n                },\n                (error: HttpErrorResponse): void => {\n                  dialogRef.close()\n                  this.errorSnackbarService.open(error)\n                },\n              )\n            },\n          },\n        ],\n      },\n    }\n    this.dialog.open(DialogComponent, dialogConfig)\n  }\n\n  public removeAliasConfirmDialog(domain: string, alias: string): void {\n    const dialogConfig: DialogConfig = {\n      data: {\n        title: `Remove ${alias}`,\n        text: 'Are you sure? Any account data will remain as this is just an alias.',\n        buttons: [\n          {\n            options: {\n              active: false,\n              text: 'NO',\n            },\n          },\n          {\n            options: {\n              active: false,\n              text: 'YES',\n              buttonColor: 'warn',\n              spinnerSize: 18,\n              mode: 'indeterminate',\n            },\n            callback: (dialogRef: MatDialogRef<DialogComponent>): void => {\n              dialogRef.disableClose = true\n              dialogConfig.data.buttons[0].options.disabled = true\n              dialogConfig.data.buttons[1].options.active = true\n\n              this.apiDomainsService.deleteAlias(domain, alias).subscribe(\n                (): void => {\n                  dialogRef.close()\n                  this.snackBar.open(`${alias} has been removed`, undefined, { panelClass: 'success-snackbar' })\n                  this.domainsService.getDomains()\n                },\n                (error: HttpErrorResponse): void => {\n                  dialogRef.close()\n                  this.errorSnackbarService.open(error)\n                },\n              )\n            },\n          },\n        ],\n      },\n    }\n    this.dialog.open(DialogComponent, dialogConfig)\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { Domain, DomainsService as ApiDomainsService } from 'ducky-api-client-angular'\nimport { Subject, Subscription } from 'rxjs'\nimport { ErrorSnackbarService } from 'src/app/shared/components/error-snackbar/error-snackbar.service'\n\nimport { DomainWithAliasParentInfo } from './domains.interfaces'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DomainsService {\n  constructor(private errorSnackbarService: ErrorSnackbarService, private apiDomainsService: ApiDomainsService) {}\n\n  public domainsSubscription: Subscription\n  public domains: Domain[]\n  public domainsStrings: string[]\n  public domainsAndAliases: DomainWithAliasParentInfo[]\n  public domainsAndAliasesSubject: Subject<DomainWithAliasParentInfo[]> = new Subject()\n  public domainsAndAliasesStrings: string[]\n\n  public getDomains(): void {\n    this.domainsSubscription = this.apiDomainsService.getDomains().subscribe(\n      (domains: Domain[]): void => {\n        this.domains = domains\n        this.domainsStrings = domains.map((value): string => value.domain)\n\n        // Assert domains as a different type so we can add \"aliasOf\"\n        const assertedDomains = domains as DomainWithAliasParentInfo[]\n        const domainsAndAliases: DomainWithAliasParentInfo[] = []\n\n        for (const domain of assertedDomains) {\n          domainsAndAliases.push(domain)\n          if (domain.aliases && domain.aliases.length > 0) {\n            for (const alias of domain.aliases) {\n              alias.aliasOf = domain.domain\n              domainsAndAliases.push(alias)\n            }\n          }\n        }\n\n        this.domainsAndAliases = domainsAndAliases\n        this.domainsAndAliasesSubject.next(domainsAndAliases)\n        this.domainsAndAliasesStrings = domainsAndAliases.map((value): string => value.domain)\n      },\n      error => {\n        this.errorSnackbarService.open(error)\n      },\n    )\n  }\n}\n","export default \".row-container > mat-form-field {\\n  min-width: 0;\\n  width: 100%;\\n}\\n\\n.user-input-right {\\n  text-align: right;\\n}\\n\\n.at-symbol {\\n  padding-bottom: 1.34375em;\\n}\\n\\n.loader-container {\\n  width: 80vw;\\n  margin: 0 -24px;\\n  padding: 0 24px;\\n  box-sizing: border-box;\\n  max-width: 490.38px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWlyby9EZXYvRHVja3lQYW5lbC9zcmMvYXBwL3BhZ2VzL2ZvcndhcmRlcnMvY29tcG9uZW50cy9mb3J3YXJkZXItZGlhbG9nL2ZvcndhcmRlci1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2ZvcndhcmRlcnMvY29tcG9uZW50cy9mb3J3YXJkZXItZGlhbG9nL2ZvcndhcmRlci1kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0VBQ0EsV0FBQTtBQ0NGOztBREVBO0VBQ0UsaUJBQUE7QUNDRjs7QURFQTtFQUNFLHlCQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9mb3J3YXJkZXJzL2NvbXBvbmVudHMvZm9yd2FyZGVyLWRpYWxvZy9mb3J3YXJkZXItZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdy1jb250YWluZXIgPiBtYXQtZm9ybS1maWVsZCB7XG4gIG1pbi13aWR0aDogMDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi51c2VyLWlucHV0LXJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5hdC1zeW1ib2wge1xuICBwYWRkaW5nLWJvdHRvbTogMS4zNDM3NWVtO1xufVxuXG4ubG9hZGVyLWNvbnRhaW5lciB7XG4gIHdpZHRoOiA4MHZ3O1xuICBtYXJnaW46IDAgLTI0cHg7XG4gIHBhZGRpbmc6IDAgMjRweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbWF4LXdpZHRoOiA0OTAuMzhweDsgLy8gV2lkdGggb2YgdGhlIGVudGlyZSBmb3JtLiBTb3JyeSBmb3IgdGhlIG1hZ2ljIG51bWJlciwgSSBjb3VsZG4ndCBmaWd1cmUgb3V0IGhvdyB0byBnZXQgdG8gdGhpcyB2YWx1ZSBvdGhlcndpc2Vcbn0iLCIucm93LWNvbnRhaW5lciA+IG1hdC1mb3JtLWZpZWxkIHtcbiAgbWluLXdpZHRoOiAwO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnVzZXItaW5wdXQtcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmF0LXN5bWJvbCB7XG4gIHBhZGRpbmctYm90dG9tOiAxLjM0Mzc1ZW07XG59XG5cbi5sb2FkZXItY29udGFpbmVyIHtcbiAgd2lkdGg6IDgwdnc7XG4gIG1hcmdpbjogMCAtMjRweDtcbiAgcGFkZGluZzogMCAyNHB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXgtd2lkdGg6IDQ5MC4zOHB4O1xufSJdfQ== */\"","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes'\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Component, Inject, OnInit } from '@angular/core'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { MAT_DIALOG_DATA, MatChipInputEvent, MatDialogRef, MatSnackBar } from '@angular/material'\nimport { CreateForwarderDto, ForwarderDetails, ForwardersService } from 'ducky-api-client-angular'\nimport { MatProgressButtonOptions } from 'mat-progress-buttons'\nimport { Observable, Subscription } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { AccountDialogComponent } from 'src/app/pages/accounts/components/account-dialog/account-dialog.component'\nimport { DomainsService } from 'src/app/pages/domains/domains.service'\nimport { ErrorSnackbarService } from 'src/app/shared/components/error-snackbar/error-snackbar.service'\nimport { AddressUsernameValidator } from 'src/app/shared/validators/address-username-validator.directive'\nimport { forwardingTargetValidator } from 'src/app/shared/validators/forwarding-target-validator.directive'\n\n@Component({\n  selector: 'app-forwarder-dialog',\n  templateUrl: './forwarder-dialog.component.html',\n  styleUrls: ['./forwarder-dialog.component.scss'],\n})\nexport class ForwarderDialogComponent implements OnInit {\n  public constructor(\n    public dialogRef: MatDialogRef<AccountDialogComponent>,\n    private breakpointObserver: BreakpointObserver,\n    public readonly domainsService: DomainsService,\n    private readonly forwardersService: ForwardersService,\n    private snackBar: MatSnackBar,\n    private errorSnackbarService: ErrorSnackbarService,\n    @Inject(MAT_DIALOG_DATA) public data,\n  ) {}\n  public isModifyDialog: boolean\n  public forwarderDetails: ForwarderDetails\n  public forwarderDetailsSubscription: Subscription\n  public forwardTargets: string[] = []\n  public forwardTargetsDirty = false\n  public readonly newTargetSeperators: number[] = [ENTER, COMMA, SPACE]\n\n  public isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map((result): boolean => result.matches))\n\n  public forwarderForm: FormGroup = new FormGroup({\n    name: new FormControl(null),\n    addressUser: new FormControl(null, AddressUsernameValidator()),\n    domain: new FormControl(null),\n    newTarget: new FormControl(null, forwardingTargetValidator()),\n    forwardLimit: new FormControl(null, [Validators.min(1), Validators.max(200)]),\n  })\n\n  public saveButtonConfig: MatProgressButtonOptions = {\n    active: false,\n    text: 'SAVE',\n    disabled: true,\n    raised: true,\n    buttonColor: 'primary',\n    spinnerColor: 'accent',\n    spinnerSize: 18,\n    mode: 'indeterminate',\n  }\n\n  public cancelButtonConfig: MatProgressButtonOptions = {\n    active: false,\n    type: 'button',\n    text: 'CANCEL',\n  }\n\n  public ngOnInit(): void {\n    this.forwarderForm.valueChanges.subscribe((): void => {\n      if (this.forwarderForm.dirty && this.forwarderForm.valid) {\n        this.saveButtonConfig.disabled = false\n      } else {\n        this.saveButtonConfig.disabled = true\n      }\n    })\n\n    // If id was passed this is a modify dialog and we need to get existing data\n    if (this.data) {\n      this.isModifyDialog = true\n      this.getForwarder()\n    }\n  }\n\n  public addTarget(event: MatChipInputEvent): void {\n    if (this.forwarderForm.controls['newTarget'].valid) {\n      if ((event.value || '').trim()) {\n        this.forwardTargetsDirty = true\n        this.forwardTargets.push(event.value.trim())\n      }\n\n      // Reset the input value\n      if (event.input) {\n        this.forwarderForm.controls['newTarget'].setValue('')\n        this.forwarderForm.controls['newTarget'].markAsUntouched()\n      }\n    } else {\n      this.forwarderForm.controls['newTarget'].markAsTouched()\n    }\n  }\n\n  public removeTarget(target: string): void {\n    const index = this.forwardTargets.indexOf(target)\n\n    if (index >= 0) {\n      this.forwardTargetsDirty = true\n      this.forwarderForm.controls['newTarget'].markAsDirty()\n      this.forwarderForm.controls['newTarget'].markAsTouched()\n      this.saveButtonConfig.disabled = false\n      this.forwardTargets.splice(index, 1)\n    }\n  }\n\n  public forceCheckForm(): void {\n    if (this.forwarderForm.invalid) {\n      this.forwarderForm.markAllAsTouched()\n    }\n  }\n\n  public getForwarder(): void {\n    this.forwarderDetailsSubscription = this.forwardersService.getForwarderDetails(this.data.id).subscribe(\n      (forwarder): void => {\n        this.forwarderDetails = forwarder\n        // Split address to name and domain for split input\n        const addressUser = this.forwarderDetails.address.substring(0, this.forwarderDetails.address.lastIndexOf('@'))\n        const domain = this.forwarderDetails.address.substring(this.forwarderDetails.address.lastIndexOf('@') + 1)\n\n        this.forwarderForm.setValue({\n          name: forwarder.name ? forwarder.name : null, // If name is false then don't fill name field\n          addressUser: addressUser,\n          domain: domain,\n          newTarget: null,\n          forwardLimit: forwarder.limits.forward.allowed,\n        })\n        this.forwardTargets = forwarder.targets\n      },\n      (error: HttpErrorResponse): void => {\n        this.dialogRef.close()\n        this.errorSnackbarService.open(error)\n      },\n    )\n  }\n\n  public updateForwarder(): void {\n    this.dialogRef.disableClose = true\n    this.cancelButtonConfig.disabled = true\n    this.saveButtonConfig.active = true\n\n    const dirtyValues: any = {}\n    for (const key in this.forwarderForm.controls) {\n      const value = this.forwarderForm.controls[key].value\n      if (this.forwarderForm.controls[key].dirty && value !== null && value !== '') {\n        dirtyValues[key] = value\n      }\n    }\n\n    const address = `${this.forwarderForm.controls['addressUser'].value}@${this.forwarderForm.controls['domain'].value}`\n    let dirtyAddress: string\n    if (dirtyValues.addressUser || dirtyValues.domain) {\n      dirtyAddress = `${this.forwarderForm.controls['addressUser'].value}@${this.forwarderForm.controls['domain'].value}`\n    }\n\n    const forwarder: CreateForwarderDto = {\n      name: dirtyValues.name,\n      address: dirtyAddress,\n      targets: this.forwardTargetsDirty ? this.forwardTargets : undefined,\n      limits: {\n        forward: dirtyValues.forwardLimit,\n      },\n    }\n\n    const onError = (error: HttpErrorResponse): void => {\n      this.dialogRef.disableClose = false\n      this.cancelButtonConfig.disabled = false\n      this.saveButtonConfig.active = false\n      this.errorSnackbarService.open(error)\n    }\n\n    if (this.isModifyDialog) {\n      this.forwardersService.updateForwarder(this.data.id, forwarder).subscribe((): void => {\n        this.snackBar.open(`${address} successfully updated`, undefined, {\n          panelClass: 'success-snackbar',\n        })\n        this.dialogRef.close(true)\n      }, onError)\n    } else {\n      this.forwardersService.createForwarder(forwarder).subscribe((): void => {\n        this.snackBar.open(`${address} successfully added`, undefined, {\n          panelClass: 'success-snackbar',\n        })\n        this.dialogRef.close(true)\n      }, onError)\n    }\n  }\n}\n","export default \".mat-column-actions {\\n  -webkit-box-flex: 0;\\n          flex: 0 0 80px;\\n}\\n\\n.mat-column-actions.mat-header-cell {\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWlyby9EZXYvRHVja3lQYW5lbC9zcmMvYXBwL3BhZ2VzL2ZvcndhcmRlcnMvZm9yd2FyZGVycy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvZm9yd2FyZGVycy9mb3J3YXJkZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsbUJBQUE7VUFBQSxjQUFBO0FDQUY7O0FESUE7RUFDRSx3QkFBQTtVQUFBLHVCQUFBO0FDREYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9mb3J3YXJkZXJzL2ZvcndhcmRlcnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBbGlnbiBhY3Rpb25zIGNvbGx1bW4gdG8gdGhlIHJpZ2h0XG4ubWF0LWNvbHVtbi1hY3Rpb25zIHtcbiAgZmxleDogMCAwIDgwcHhcbn1cblxuLy8gQWxpZ24gYWN0aW9ucyBjb2x1bW4gY2VudGVyXG4ubWF0LWNvbHVtbi1hY3Rpb25zLm1hdC1oZWFkZXItY2VsbCB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufSIsIi5tYXQtY29sdW1uLWFjdGlvbnMge1xuICBmbGV4OiAwIDAgODBweDtcbn1cblxuLm1hdC1jb2x1bW4tYWN0aW9ucy5tYXQtaGVhZGVyLWNlbGwge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn0iXX0= */\"","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Component, OnInit, ViewChild } from '@angular/core'\nimport {\n  MatDialog,\n  MatDialogConfig,\n  MatDialogRef,\n  MatPaginator,\n  MatSnackBar,\n  MatSort,\n  MatTableDataSource,\n} from '@angular/material'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { Forwarder, ForwardersService } from 'ducky-api-client-angular'\nimport { Observable, Subscription } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { DialogComponent } from 'src/app/shared/components/dialog/dialog.component'\nimport { DialogConfig } from 'src/app/shared/components/dialog/dialog.interfaces'\nimport { ErrorSnackbarService } from 'src/app/shared/components/error-snackbar/error-snackbar.service'\n\nimport { ForwarderDialogComponent } from './components/forwarder-dialog/forwarder-dialog.component'\n\n@Component({\n  selector: 'app-forwarders',\n  templateUrl: './forwarders.component.html',\n  styleUrls: ['./forwarders.component.scss'],\n})\nexport class ForwardersComponent implements OnInit {\n  public constructor(\n    private breakpointObserver: BreakpointObserver,\n    public dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private errorSnackbarService: ErrorSnackbarService,\n    private readonly forwardersService: ForwardersService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {}\n\n  public displayedColumns = ['address', 'actions']\n  public dataSource: MatTableDataSource<Forwarder> = new MatTableDataSource()\n  public forwarderSubscription: Subscription\n  public isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map((result): boolean => result.matches))\n\n  @ViewChild(MatSort, { static: false })\n  private set content(sort: MatSort) {\n    // Needed because of the ngif wrapper around the table\n    if (this.dataSource) {\n      this.dataSource.sort = sort\n    }\n  }\n\n  @ViewChild(MatPaginator, { static: true })\n  public paginator: MatPaginator\n\n  public ngOnInit(): void {\n    this.getForwarders()\n\n    this.dataSource.paginator = this.paginator\n\n    this.activatedRoute.params.subscribe((params): void => {\n      if (params['id']) {\n        this.forwarderDialog(params['id'])\n      }\n    })\n  }\n\n  public applyFilter(filterValue: string): void {\n    this.dataSource.filter = filterValue.trim().toLowerCase()\n  }\n\n  public getForwarders(): void {\n    this.forwarderSubscription = this.forwardersService.getForwarders().subscribe(\n      (forwarders): void => {\n        this.dataSource.data = forwarders\n      },\n      error => {\n        this.errorSnackbarService.open(error)\n      },\n    )\n  }\n\n  public forwarderDialog(id?: string): void {\n    const dialogConfig: MatDialogConfig = {}\n    if (id) {\n      dialogConfig.data = { id: id }\n    }\n    const dialog = this.dialog.open(ForwarderDialogComponent, dialogConfig)\n    dialog.afterClosed().subscribe((result): void => {\n      this.router.navigateByUrl('/forwarders/')\n      if (result) {\n        this.getForwarders()\n      }\n    })\n  }\n\n  public removeConfirmDialog(forwarderId: string, address?: string): void {\n    const dialogConfig: DialogConfig = {\n      data: {\n        title: `Remove ${address || forwarderId}`,\n        text: 'Are you sure?',\n        buttons: [\n          {\n            options: {\n              active: false,\n              text: 'NO',\n            },\n          },\n          {\n            options: {\n              active: false,\n              text: 'YES',\n              buttonColor: 'warn',\n              spinnerSize: 18,\n              mode: 'indeterminate',\n            },\n            callback: (dialogRef: MatDialogRef<DialogComponent>): void => {\n              dialogRef.disableClose = true\n              dialogConfig.data.buttons[0].options.disabled = true\n              dialogConfig.data.buttons[1].options.active = true\n\n              this.forwardersService.deleteForwarder(forwarderId).subscribe(\n                (): void => {\n                  dialogRef.close()\n                  this.snackBar.open(`${address || forwarderId} has been removed`, undefined, {\n                    panelClass: 'success-snackbar',\n                  })\n                  this.getForwarders()\n                },\n                (error: HttpErrorResponse): void => {\n                  dialogRef.disableClose = false\n                  dialogConfig.data.buttons[0].options.disabled = false\n                  dialogConfig.data.buttons[1].options.active = false\n                  this.errorSnackbarService.open(error)\n                },\n              )\n            },\n          },\n        ],\n      },\n    }\n    this.dialog.open(DialogComponent, dialogConfig)\n  }\n}\n","export default \".layout-center {\\n  background-color: #00BCD4;\\n  height: 100vh;\\n}\\n\\nmat-card {\\n  box-sizing: border-box;\\n  width: 400px;\\n  padding: 30px;\\n}\\n\\nmat-card.is-handset {\\n  width: 100vw;\\n  height: 100vh;\\n}\\n\\nmat-card-title {\\n  text-align: center;\\n  margin-bottom: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWlyby9EZXYvRHVja3lQYW5lbC9zcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUFBO0VBQ0EsYUFBQTtBQ0NGOztBREVBO0VBQ0Usc0JBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtBQ0NGOztBRENFO0VBQ0UsWUFBQTtFQUNBLGFBQUE7QUNDSjs7QURHQTtFQUNFLGtCQUFBO0VBQ0EsbUJBQUE7QUNBRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxheW91dC1jZW50ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBCQ0Q0O1xuICBoZWlnaHQ6IDEwMHZoO1xufVxuXG5tYXQtY2FyZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHdpZHRoOiA0MDBweDtcbiAgcGFkZGluZzogMzBweDtcblxuICAmLmlzLWhhbmRzZXQge1xuICAgIHdpZHRoOiAxMDB2dztcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICB9XG59XG5cbm1hdC1jYXJkLXRpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuIiwiLmxheW91dC1jZW50ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBCQ0Q0O1xuICBoZWlnaHQ6IDEwMHZoO1xufVxuXG5tYXQtY2FyZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHdpZHRoOiA0MDBweDtcbiAgcGFkZGluZzogMzBweDtcbn1cbm1hdC1jYXJkLmlzLWhhbmRzZXQge1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG59XG5cbm1hdC1jYXJkLXRpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufSJdfQ== */\"","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout'\nimport { Component, OnInit } from '@angular/core'\nimport { FormControl, FormGroup } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { AccessToken, AuthenticationService } from 'ducky-api-client-angular'\nimport { MatProgressButtonOptions } from 'mat-progress-buttons'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { ErrorSnackbarService } from 'src/app/shared/components/error-snackbar/error-snackbar.service'\n\nimport { DomainsService } from '../domains/domains.service'\nimport { ProfileService } from '../profile/profile.service'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  public constructor(\n    private breakpointObserver: BreakpointObserver,\n    private authenticationService: AuthenticationService,\n    private profileService: ProfileService,\n    private errorSnackbarService: ErrorSnackbarService,\n    private domainsService: DomainsService,\n    private router: Router,\n  ) {}\n\n  public isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map((result): boolean => result.matches))\n\n  public loginForm: FormGroup = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n  })\n\n  public loginButtonConfig: MatProgressButtonOptions = {\n    active: false,\n    text: 'LOGIN',\n    disabled: true,\n    raised: true,\n    buttonColor: 'primary',\n    spinnerColor: 'accent',\n    spinnerSize: 18,\n    mode: 'indeterminate',\n  }\n\n  public ngOnInit(): void {\n    this.loginForm.valueChanges.subscribe((): void => {\n      this.loginButtonConfig.disabled = this.loginForm.invalid\n    })\n  }\n\n  public login(): void {\n    if (this.loginForm.valid) {\n      this.loginButtonConfig.active = true\n      this.authenticationService\n        .getAccessToken({\n          username: this.loginForm.value.username,\n          password: this.loginForm.value.password,\n        })\n        .subscribe(\n          (accessToken: AccessToken): void => {\n            localStorage.setItem('access_token', accessToken.accessToken)\n            this.authenticationService.configuration.accessToken = accessToken.accessToken\n\n            this.profileService.user.username = this.loginForm.value.username\n            this.profileService.getUserInfo()\n            this.domainsService.getDomains()\n\n            this.router.navigateByUrl('/accounts')\n          },\n          (error): void => {\n            this.loginButtonConfig.active = false\n            if (error.error.error === 'Unauthorized') {\n              this.errorSnackbarService.open('Invalid username or password')\n            } else {\n              this.errorSnackbarService.open(error)\n            }\n          },\n        )\n    }\n  }\n}\n","export default \".usage-text {\\n  white-space: nowrap;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWlyby9EZXYvRHVja3lQYW5lbC9zcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2FnZS10ZXh0IHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn0iLCIudXNhZ2UtdGV4dCB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59Il19 */\"","import { HttpErrorResponse } from '@angular/common/http'\nimport { Component, OnInit } from '@angular/core'\nimport { FormControl, FormGroup } from '@angular/forms'\nimport { MatDialog, MatDialogRef, MatSnackBar } from '@angular/material'\nimport { Router } from '@angular/router'\nimport {\n  AuthenticationService,\n  EmailAccountsService,\n  ProfileService as ApiProfileService,\n} from 'ducky-api-client-angular'\nimport { MatProgressButtonOptions } from 'mat-progress-buttons'\nimport { Subscription } from 'rxjs'\nimport { DialogComponent } from 'src/app/shared/components/dialog/dialog.component'\nimport { DialogConfig } from 'src/app/shared/components/dialog/dialog.interfaces'\nimport { ErrorSnackbarService } from 'src/app/shared/components/error-snackbar/error-snackbar.service'\nimport { formatBytes } from 'src/app/shared/functions/formatBytes.function'\nimport { IsAsciiValidator } from 'src/app/shared/validators/ascii-validator.directive'\nimport { notContainsValidator } from 'src/app/shared/validators/not-contains-validator.directive'\n\nimport { ProfileService } from './profile.service'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  public constructor(\n    public apiProfileService: ApiProfileService,\n    public profileService: ProfileService,\n    private authenticationService: AuthenticationService,\n    private emailAccountsService: EmailAccountsService,\n    private snackBar: MatSnackBar,\n    private errorSnackbarService: ErrorSnackbarService,\n    private router: Router,\n    public dialog: MatDialog,\n  ) {}\n  public usage = {\n    bytes: 0,\n    formatted: 'Usage',\n  }\n  public quota = {\n    bytes: 0,\n    formatted: 'Quota',\n  }\n  public calculateStorageSubscription: Subscription\n\n  public loginDetailsForm: FormGroup = new FormGroup({\n    username: new FormControl(this.profileService.user.username, [IsAsciiValidator(), notContainsValidator(' ')]),\n    password: new FormControl(null),\n  })\n\n  public loginDetailsButtonConfig: MatProgressButtonOptions = {\n    active: false,\n    text: 'CHANGE',\n    disabled: true,\n    raised: true,\n    buttonColor: 'primary',\n    spinnerColor: 'accent',\n    spinnerSize: 18,\n    mode: 'indeterminate',\n  }\n\n  public ngOnInit(): void {\n    this.calculateStorage()\n    this.profileService.userInfoSubscription.add(() => {\n      // Only set username and quota if the userinfo request has finished\n      this.loginDetailsForm.controls['username'].setValue(this.profileService.user.username)\n      this.quota.bytes = this.profileService.user.quota\n      this.quota.formatted = formatBytes(this.quota.bytes)\n    })\n    this.loginDetailsForm.valueChanges.subscribe((): void => {\n      this.loginDetailsButtonConfig.disabled = this.loginDetailsForm.invalid\n    })\n  }\n\n  public calculateStorage(): void {\n    this.usage.bytes = 0\n    this.calculateStorageSubscription = this.emailAccountsService.getAccounts().subscribe(\n      (accounts): void => {\n        for (const account of accounts) {\n          this.usage.bytes += account.quota.used\n        }\n        this.usage.formatted = formatBytes(this.usage.bytes)\n      },\n      error => {\n        this.errorSnackbarService.open(error)\n      },\n    )\n  }\n\n  public changeLoginDetails(): void {\n    if (this.loginDetailsForm.valid) {\n      this.loginDetailsButtonConfig.active = true\n      this.apiProfileService\n        .updateMe({\n          username: this.loginDetailsForm.value.username,\n          password: this.loginDetailsForm.value.password,\n        })\n        .subscribe(\n          (): void => {\n            this.loginDetailsButtonConfig.active = false\n            this.snackBar.open(`Username/Password successfully updated`, undefined, {\n              panelClass: 'success-snackbar',\n            })\n            this.profileService.getUserInfo()\n          },\n          (error): void => {\n            this.loginDetailsButtonConfig.active = false\n            this.errorSnackbarService.open(error)\n          },\n        )\n    }\n  }\n\n  public logout(): void {\n    localStorage.removeItem('access_token')\n    delete this.authenticationService.configuration.accessToken\n    this.snackBar.open('Logged out successfully', undefined, {\n      panelClass: 'success-snackbar',\n    })\n    this.router.navigateByUrl('/login')\n  }\n\n  public logoutAllDialog(): void {\n    const dialogConfig: DialogConfig = {\n      data: {\n        title: 'Log out from all devices',\n        text: 'Are you sure? This will also log you out on this device.',\n        buttons: [\n          {\n            options: {\n              active: false,\n              text: 'NO',\n            },\n          },\n          {\n            options: {\n              active: false,\n              text: 'YES',\n              buttonColor: 'warn',\n              spinnerSize: 18,\n              mode: 'indeterminate',\n            },\n            callback: (dialogRef: MatDialogRef<DialogComponent>): void => {\n              dialogRef.disableClose = true\n              dialogConfig.data.buttons[0].options.disabled = true\n              dialogConfig.data.buttons[1].options.active = true\n\n              this.authenticationService.revokeAllAccessTokens().subscribe(\n                (): void => {\n                  dialogRef.close()\n                  this.logout()\n                },\n                (error: HttpErrorResponse): void => {\n                  dialogRef.disableClose = false\n                  dialogConfig.data.buttons[0].options.disabled = false\n                  dialogConfig.data.buttons[1].options.active = false\n                  this.errorSnackbarService.open(error)\n                },\n              )\n            },\n          },\n        ],\n      },\n    }\n    this.dialog.open(DialogComponent, dialogConfig)\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { ProfileService as ApiProfileService, User } from 'ducky-api-client-angular'\nimport { Subscription } from 'rxjs'\nimport { ErrorSnackbarService } from 'src/app/shared/components/error-snackbar/error-snackbar.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  public constructor(\n    private apiProfileService: ApiProfileService,\n    private errorSnackbarService: ErrorSnackbarService,\n  ) {}\n\n  public user: User = {} as User\n  public userInfoSubscription: Subscription\n\n  public getUserInfo(): void {\n    this.userInfoSubscription = this.apiProfileService.getMe().subscribe(\n      (user): void => {\n        this.user = user\n      },\n      error => {\n        this.errorSnackbarService.open(error)\n      },\n    )\n  }\n}\n","export default \"mat-dialog-content {\\n  max-width: 350px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWlyby9EZXYvRHVja3lQYW5lbC9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZy9kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZy9kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9nL2RpYWxvZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1kaWFsb2ctY29udGVudCB7XG4gIG1heC13aWR0aDogMzUwcHg7XG59XG4iLCJtYXQtZGlhbG9nLWNvbnRlbnQge1xuICBtYXgtd2lkdGg6IDM1MHB4O1xufSJdfQ== */\"","import { Component, Inject } from '@angular/core'\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material'\n\n@Component({\n  selector: 'custom-dialog',\n  templateUrl: 'dialog.component.html',\n  styleUrls: ['dialog.component.scss'],\n})\nexport class DialogComponent {\n  public constructor(public dialogRef: MatDialogRef<DialogComponent>, @Inject(MAT_DIALOG_DATA) public data) {}\n}\n","export default \".action {\\n  margin: -8px -8px -8px -8px;\\n}\\n\\n.flex-container {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWlyby9EZXYvRHVja3lQYW5lbC9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2Vycm9yLXNuYWNrYmFyL2Vycm9yLXNuYWNrYmFyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9lcnJvci1zbmFja2Jhci9lcnJvci1zbmFja2Jhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDJCQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9lcnJvci1zbmFja2Jhci9lcnJvci1zbmFja2Jhci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3Rpb24ge1xuICBtYXJnaW46IC04cHggLThweCAtOHB4IC04cHg7XG59XG5cbi5mbGV4LWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlXG59IiwiLmFjdGlvbiB7XG4gIG1hcmdpbjogLThweCAtOHB4IC04cHggLThweDtcbn1cblxuLmZsZXgtY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG59Il19 */\"","import { HttpErrorResponse } from '@angular/common/http'\nimport { Component, Inject, OnInit } from '@angular/core'\nimport { MAT_SNACK_BAR_DATA, MatDialog, MatSnackBarRef } from '@angular/material'\nimport { Router } from '@angular/router'\n\nimport { DialogComponent } from '../dialog/dialog.component'\nimport { DialogConfig } from '../dialog/dialog.interfaces'\n\n@Component({\n  selector: 'app-error-snackbar',\n  templateUrl: './error-snackbar.component.html',\n  styleUrls: ['./error-snackbar.component.scss'],\n})\nexport class ErrorSnackbarComponent implements OnInit {\n  public constructor(\n    public snackBarRef: MatSnackBarRef<ErrorSnackbarComponent>,\n    private dialog: MatDialog,\n    private router: Router,\n    @Inject(MAT_SNACK_BAR_DATA) public data,\n  ) {}\n\n  public message: string\n  public errorDetails: string\n\n  public ngOnInit(): void {\n    if (this.data instanceof HttpErrorResponse) {\n      if (this.data.error.error === 'Unauthorized') {\n        this.message = 'Session expired, please login.'\n        this.router.navigateByUrl('/login')\n      } else if (this.data.error.error === 'ValidationError') {\n        this.message = 'Invalid input'\n        this.errorDetails = JSON.stringify(this.data.error.message)\n      } else if (this.data.error.message) {\n        this.message = this.data.error.message\n      } else {\n        this.message = 'Unknown error. 🤷‍'\n        this.errorDetails = JSON.stringify(this.data.message)\n      }\n    } else {\n      this.message = this.data\n    }\n  }\n\n  public showDetails(): void {\n    const dialogConfig: DialogConfig = {\n      data: {\n        title: 'Error details',\n        text: this.errorDetails,\n        buttons: [\n          {\n            options: {\n              active: false,\n              text: 'OK',\n            },\n          },\n        ],\n      },\n    }\n    this.dialog.open(DialogComponent, dialogConfig)\n  }\n}\n","import { Injectable, NgZone } from '@angular/core'\nimport { MatSnackBar } from '@angular/material'\n\nimport { ErrorSnackbarComponent } from './error-snackbar.component'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorSnackbarService {\n  constructor(private snackBar: MatSnackBar, private zone: NgZone) {}\n\n  public open(error): void {\n    this.zone.run(() => {\n      this.snackBar.openFromComponent(ErrorSnackbarComponent, {\n        data: error,\n        panelClass: ['error-snackbar'],\n      })\n    })\n  }\n}\n","export default \"button {\\n  position: fixed;\\n  right: 30px;\\n  bottom: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhbWlyby9EZXYvRHVja3lQYW5lbC9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2ZhYi1idXR0b24vZmFiLWJ1dHRvbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZmFiLWJ1dHRvbi9mYWItYnV0dG9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9mYWItYnV0dG9uL2ZhYi1idXR0b24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b24ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAzMHB4O1xuICBib3R0b206IDMwcHg7XG59XG4iLCJidXR0b24ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAzMHB4O1xuICBib3R0b206IDMwcHg7XG59Il19 */\"","import { Component, Input } from '@angular/core'\n\n@Component({\n  selector: 'app-fab-button',\n  templateUrl: './fab-button.component.html',\n  styleUrls: ['./fab-button.component.scss'],\n})\nexport class FabButtonComponent {\n  @Input() public icon: string\n}\n","export function formatBytes(bytes: number, decimals = 1): string {\r\n  if (bytes == 0) return '0 Bytes'\r\n  const k = 1024,\r\n    sizes = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'],\r\n    i = Math.floor(Math.log(bytes) / Math.log(k))\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(decimals)) + ' ' + sizes[i]\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms'\nimport { Validator } from 'class-validator'\n\n/**\n * @description Function that validates if string is empty, email address, smtp address, or http address\n */\nexport function AddressUsernameValidator(): ValidatorFn {\n  const validator = new Validator()\n  return (control: AbstractControl): ValidationErrors | null => {\n    const completeAddress = `${control.value}@example.com`\n    if (validator.isEmail(completeAddress)) {\n      // string is valid\n      return null\n    } else {\n      // string is not an email or an url with a valid protocol\n      return {\n        AddressUsername: {\n          valid: false,\n        },\n      }\n    }\n  }\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms'\nimport { Validator } from 'class-validator'\n\n/**\n * @description Function that validates if string only ascii characters\n */\nexport function IsAsciiValidator(): ValidatorFn {\n  const validator = new Validator()\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (validator.isAscii(control.value)) {\n      // string is valid\n      return null\n    } else {\n      // string is not ascii\n      return {\n        isAscii: {\n          valid: false,\n        },\n      }\n    }\n  }\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms'\nimport { Validator } from 'class-validator'\n\n/**\n * @description Function that validates if string is empty, email address, smtp address, or http address\n */\nexport function forwardingTargetValidator(): ValidatorFn {\n  const validator = new Validator()\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (\n      validator.isEmpty(control.value) ||\n      validator.isEmail(control.value) ||\n      validator.isURL(control.value, {\n        protocols: ['http', 'https', 'smtp', 'smtps'],\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        require_protocol: true,\n      })\n    ) {\n      // string is valid\n      return null\n    } else {\n      // string is not an email or an url with a valid protocol\n      return {\n        forwardingTarget: {\n          valid: false,\n        },\n      }\n    }\n  }\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms'\nimport { Validator } from 'class-validator'\n\n/**\n * @description Function that validates if string does not contain the given seed\n */\nexport function notContainsValidator(seed: string): ValidatorFn {\n  const validator = new Validator()\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (validator.notContains(control.value, seed)) {\n      // string is valid\n      return null\n    } else {\n      // string is not ascii\n      return {\n        notContains: {\n          valid: false,\n        },\n      }\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs'\n\nimport { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err): void => alert(err))\n"],"sourceRoot":"webpack:///"}